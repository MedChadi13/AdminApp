{"ast":null,"code":"var _jsxFileName = \"/Users/user/Downloads/flask-react-session-authenticaton-tutorial-master/client/src/pages/Upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport httpClient from \"../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const [file, setFile] = useState();\n  const [array, setArray] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [result, setResult] = useState([]);\n  const fileReader = new FileReader();\n  const formData = new FormData();\n  const handleOnChange = e => {\n    setFile(e.target.files[0]);\n    formData.append(\"file\", e.target.files[0]);\n  };\n  const csvFileToArray = string => {\n    const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n    const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n    const array = csvRows.map(i => {\n      const values = i.split(\",\");\n      const obj = csvHeader.reduce((object, header, index) => {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return obj;\n    });\n    setArray(array);\n  };\n  const headerKeys = Object.keys(Object.assign({}, ...array));\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    if (file) {\n      fileReader.onload = function (event) {\n        const text = event.target.result;\n        csvFileToArray(text);\n      };\n      fileReader.readAsText(file);\n    }\n    if (file != null) {\n      const data = new FormData();\n      data.append(\"file_from_react\", file);\n      let response = fetch(\"//localhost:5000/upload\", {\n        method: \"post\",\n        body: data\n      });\n      let res = response.json();\n      if (res.status !== 1) {\n        alert(\"Error uploading file\");\n      }\n    }\n  };\n  const send = async array => {\n    console.log(array);\n    await httpClient.post(\"//localhost:5000/upload\", array);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ADMIN DASHBOARD \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"csvFileInput\",\n        accept: \".csv\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleOnSubmit(e);\n        },\n        children: \"IMPORT CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerKeys.map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, \"header\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: array.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [send(item), Object.values(item).map(val => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this))]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"mNRrJgmI0ma4L0KnhZR3VB6DeqA=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","httpClient","Upload","file","setFile","array","setArray","index","setIndex","result","setResult","fileReader","FileReader","formData","FormData","handleOnChange","e","target","files","append","csvFileToArray","string","csvHeader","slice","indexOf","split","csvRows","map","i","values","obj","reduce","object","header","headerKeys","Object","keys","assign","handleOnSubmit","preventDefault","onload","event","text","readAsText","data","response","fetch","method","body","res","json","status","alert","send","console","log","post","textAlign","key","item","val","id"],"sources":["/Users/user/Downloads/flask-react-session-authenticaton-tutorial-master/client/src/pages/Upload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport httpClient from \"../httpClient\";\n\nconst Upload = () => {\n  const [file, setFile] = useState();\n  const [array, setArray] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [result, setResult] = useState([]);\n\n  const fileReader = new FileReader();\n  const formData = new FormData();\n\n  const handleOnChange = (e) => {\n    setFile(e.target.files[0]);\n    formData.append(\"file\", e.target.files[0]);\n  };\n\n  const csvFileToArray = (string) => {\n    const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n    const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n\n    const array = csvRows.map((i) => {\n      const values = i.split(\",\");\n      const obj = csvHeader.reduce((object, header, index) => {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return obj;\n    });\n\n    setArray(array);\n  };\n  const headerKeys = Object.keys(Object.assign({}, ...array));\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (file) {\n      fileReader.onload = function (event) {\n        const text = event.target.result;\n        csvFileToArray(text);\n      };\n      fileReader.readAsText(file);\n    }\n    if (file != null) {\n      const data = new FormData();\n      data.append(\"file_from_react\", file);\n\n      let response = fetch(\"//localhost:5000/upload\", {\n        method: \"post\",\n        body: data,\n      });\n      let res = response.json();\n      if (res.status !== 1) {\n        alert(\"Error uploading file\");\n      }\n    }\n  };\n\n  const send = async (array) => {\n    console.log(array);\n    await httpClient.post(\"//localhost:5000/upload\", array);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>ADMIN DASHBOARD </h1>\n      <form>\n        <input\n          type={\"file\"}\n          id={\"csvFileInput\"}\n          accept={\".csv\"}\n          onChange={handleOnChange}\n        />\n\n        <button\n          onClick={(e) => {\n            handleOnSubmit(e);\n          }}\n        >\n          IMPORT CSV\n        </button>\n      </form>\n\n      <br />\n\n      <table>\n        <thead>\n          <tr key={\"header\"}>\n            {headerKeys.map((key) => (\n              <th>{key}</th>\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {array.map((item) => (\n            <tr key={item.id}>\n              {send(item)}\n              {Object.values(item).map((val) => (\n                <td>{val}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Upload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}