{"ast":null,"code":"var _jsxFileName = \"/Users/user/Downloads/flask-react-session-authenticaton-tutorial-master/client/src/pages/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport httpClient from \"../httpClient\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const logInUser = async () => {\n    console.log(email, password);\n    try {\n      const resp = await httpClient.post(\"//localhost:5000/login\", {\n        email,\n        password\n      });\n      window.location.href = \"/\";\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"Invalid credentials\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","httpClient","LoginPage","email","setEmail","password","setPassword","logInUser","console","log","resp","post","window","location","href","error","response","status","alert"],"sources":["/Users/user/Downloads/flask-react-session-authenticaton-tutorial-master/client/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport httpClient from \"../httpClient\";\nimport \"./styles.css\"\n\nconst LoginPage: React.FC = () => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const logInUser = async () => {\n    console.log(email, password);\n\n    try {\n      const resp = await httpClient.post(\"//localhost:5000/login\", {\n        email,\n        password,\n      });\n\n      window.location.href = \"/\";\n    } catch (error: any) {\n      if (error.response.status === 401) {\n        alert(\"Invalid credentials\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"bot1\">\n      \n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAO,cAAc;AAAA;AAErB,MAAMC,SAAmB,GAAG,MAAM;EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMO,SAAS,GAAG,YAAY;IAC5BC,OAAO,CAACC,GAAG,CAACN,KAAK,EAAEE,QAAQ,CAAC;IAE5B,IAAI;MACF,MAAMK,IAAI,GAAG,MAAMT,UAAU,CAACU,IAAI,CAAC,wBAAwB,EAAE;QAC3DR,KAAK;QACLE;MACF,CAAC,CAAC;MAEFO,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC5B,CAAC,CAAC,OAAOC,KAAU,EAAE;MACnB,IAAIA,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACjCC,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC;EAAM;IAAA;IAAA;IAAA;EAAA,QAEf;AAEV,CAAC;AAAC,GA1BIhB,SAAmB;AAAA,KAAnBA,SAAmB;AA4BzB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}