{"ast":null,"code":"import { parse as t, translateX as e, translateY as i, scaleX as n, scaleY as r, multiply as s } from \"rematrix\";\nvar a = function (t) {\n    return \"number\" == typeof t;\n  },\n  o = function (t) {\n    return \"function\" == typeof t;\n  },\n  l = function (t) {\n    return \"[object Object]\" === Object.prototype.toString.call(t);\n  },\n  p = function (t) {\n    return Array.prototype.slice.apply(t);\n  },\n  c = function (t) {\n    var e = t.reduce(function (t, e) {\n      return t[e] = (t[e] || 0) + 1, t;\n    }, {});\n    return Object.keys(e).filter(function (t) {\n      return e[t] > 1;\n    });\n  };\nfunction u(t) {\n  return [].slice.call(arguments, 1).forEach(function (e) {\n    if (e) for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);\n  }), t;\n}\nvar d,\n  f = function (t, e, i) {\n    return t + (e - t) * i;\n  },\n  h = {\n    __proto__: null,\n    isNumber: a,\n    isFunction: o,\n    isObject: l,\n    toArray: p,\n    getDuplicateValsAsStrings: c,\n    assign: u,\n    tweenProp: f\n  },\n  g = {\n    __proto__: null,\n    DATA_FLIP_ID: \"data-flip-id\",\n    DATA_INVERSE_FLIP_ID: \"data-inverse-flip-id\",\n    DATA_FLIP_COMPONENT_ID: \"data-flip-component-id\",\n    DATA_FLIP_CONFIG: \"data-flip-config\",\n    DATA_PORTAL_KEY: \"data-portal-key\",\n    DATA_EXIT_CONTAINER: \"data-exit-container\"\n  },\n  m = {\n    noWobble: {\n      stiffness: 200,\n      damping: 26\n    },\n    gentle: {\n      stiffness: 120,\n      damping: 14\n    },\n    veryGentle: {\n      stiffness: 130,\n      damping: 17\n    },\n    wobbly: {\n      stiffness: 180,\n      damping: 12\n    },\n    stiff: {\n      stiffness: 260,\n      damping: 26\n    }\n  },\n  v = function (t) {\n    return l(t) ? t : Object.keys(m).indexOf(t) > -1 ? m[t] : {};\n  };\n\"undefined\" != typeof window && (d = window.requestAnimationFrame);\nvar y = d = d || function (t) {\n    window.setTimeout(t, 1e3 / 60);\n  },\n  _ = Date.now(),\n  S = \"object\" == typeof performance && \"function\" == typeof performance.now ? function () {\n    return performance.now();\n  } : function () {\n    return Date.now() - _;\n  };\nfunction E(t, e) {\n  var i = t.indexOf(e);\n  -1 !== i && t.splice(i, 1);\n}\nvar A = function () {\n    function t() {}\n    return t.prototype.run = function () {\n      var t = this;\n      y(function () {\n        t.springSystem.loop(S());\n      });\n    }, t;\n  }(),\n  C = function () {\n    this.position = 0, this.velocity = 0;\n  },\n  b = 0,\n  I = function () {\n    function t(t) {\n      this._id = \"s\" + b++, this._springSystem = t, this.listeners = [], this._startValue = 0, this._currentState = new C(), this._displacementFromRestThreshold = .001, this._endValue = 0, this._overshootClampingEnabled = !1, this._previousState = new C(), this._restSpeedThreshold = .001, this._tempState = new C(), this._timeAccumulator = 0, this._wasAtRest = !0, this._cachedSpringConfig = {};\n    }\n    var e = t.prototype;\n    return e.getId = function () {\n      return this._id;\n    }, e.destroy = function () {\n      this.listeners = [], this._springSystem.deregisterSpring(this);\n    }, e.setSpringConfig = function (t) {\n      return this._springConfig = t, this;\n    }, e.getCurrentValue = function () {\n      return this._currentState.position;\n    }, e.getDisplacementDistanceForState = function (t) {\n      return Math.abs(this._endValue - t.position);\n    }, e.setEndValue = function (t) {\n      if (t === this._endValue) return this;\n      if (this.prevEndValue = t, this._endValue === t && this.isAtRest()) return this;\n      this._startValue = this.getCurrentValue(), this._endValue = t, this._springSystem.activateSpring(this.getId());\n      for (var e = 0, i = this.listeners.length; e < i; e++) {\n        var n = this.listeners[e].onSpringEndStateChange;\n        n && n(this);\n      }\n      return this;\n    }, e.setVelocity = function (t) {\n      return t === this._currentState.velocity || (this._currentState.velocity = t, this._springSystem.activateSpring(this.getId())), this;\n    }, e.setCurrentValue = function (t) {\n      this._startValue = t, this._currentState.position = t;\n      for (var e = 0, i = this.listeners.length; e < i; e++) {\n        var n = this.listeners[e];\n        n.onSpringUpdate && n.onSpringUpdate(this);\n      }\n      return this;\n    }, e.setAtRest = function () {\n      return this._endValue = this._currentState.position, this._tempState.position = this._currentState.position, this._currentState.velocity = 0, this;\n    }, e.setOvershootClampingEnabled = function (t) {\n      return this._overshootClampingEnabled = t, this;\n    }, e.isOvershooting = function () {\n      var t = this._startValue,\n        e = this._endValue;\n      return this._springConfig.tension > 0 && (t < e && this.getCurrentValue() > e || t > e && this.getCurrentValue() < e);\n    }, e.advance = function (t, e) {\n      var i = this.isAtRest();\n      if (!i || !this._wasAtRest) {\n        var n = e;\n        e > .064 && (n = .064), this._timeAccumulator += n;\n        for (var r, s, a, o, l, p, c = this._springConfig.tension, u = this._springConfig.friction, d = this._currentState.position, f = this._currentState.velocity, h = this._tempState.position, g = this._tempState.velocity; this._timeAccumulator >= .001;) this._timeAccumulator -= .001, this._timeAccumulator < .001 && (this._previousState.position = d, this._previousState.velocity = f), s = c * (this._endValue - h) - u * f, o = c * (this._endValue - (h = d + .001 * (r = f) * .5)) - u * (g = f + .001 * s * .5), p = c * (this._endValue - (h = d + .001 * (a = g) * .5)) - u * (g = f + .001 * o * .5), h = d + .001 * (l = g), d += 1 / 6 * (r + 2 * (a + l) + (g = f + .001 * p)) * .001, f += 1 / 6 * (s + 2 * (o + p) + (c * (this._endValue - h) - u * g)) * .001;\n        this._tempState.position = h, this._tempState.velocity = g, this._currentState.position = d, this._currentState.velocity = f, this._timeAccumulator > 0 && this._interpolate(this._timeAccumulator / .001), (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) && (this._springConfig.tension > 0 ? (this._startValue = this._endValue, this._currentState.position = this._endValue) : (this._endValue = this._currentState.position, this._startValue = this._endValue), this.setVelocity(0), i = !0);\n        var m = !1;\n        this._wasAtRest && (this._wasAtRest = !1, m = !0);\n        var v = !1;\n        i && (this._wasAtRest = !0, v = !0), this.notifyPositionUpdated(m, v);\n      }\n    }, e.notifyPositionUpdated = function (t, e) {\n      var i = this;\n      this.listeners.filter(Boolean).forEach(function (n) {\n        t && n.onSpringActivate && !i._onActivateCalled && (n.onSpringActivate(i), i._onActivateCalled = !0), n.onSpringUpdate && n.onSpringUpdate(i), e && n.onSpringAtRest && n.onSpringAtRest(i);\n      });\n    }, e.systemShouldAdvance = function () {\n      return !this.isAtRest() || !this.wasAtRest();\n    }, e.wasAtRest = function () {\n      return this._wasAtRest;\n    }, e.isAtRest = function () {\n      return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || 0 === this._springConfig.tension);\n    }, e._interpolate = function (t) {\n      this._currentState.position = this._currentState.position * t + this._previousState.position * (1 - t), this._currentState.velocity = this._currentState.velocity * t + this._previousState.velocity * (1 - t);\n    }, e.addListener = function (t) {\n      return this.listeners.push(t), this;\n    }, e.addOneTimeListener = function (t) {\n      var e = this;\n      return Object.keys(t).forEach(function (i) {\n        var n;\n        t[i] = (n = t[i], function () {\n          n.apply(void 0, [].slice.call(arguments)), e.removeListener(t);\n        });\n      }), this.listeners.push(t), this;\n    }, e.removeListener = function (t) {\n      return E(this.listeners, t), this;\n    }, t;\n  }(),\n  O = function () {\n    function t(t) {\n      this.looper = t || new A(), this.looper.springSystem = this, this.listeners = [], this._activeSprings = [], this._idleSpringIndices = [], this._isIdle = !0, this._lastTimeMillis = -1, this._springRegistry = {};\n    }\n    var e = t.prototype;\n    return e.createSpring = function (t, e) {\n      return this.createSpringWithConfig({\n        tension: t,\n        friction: e\n      });\n    }, e.createSpringWithConfig = function (t) {\n      var e = new I(this);\n      return this.registerSpring(e), e.setSpringConfig(t), e;\n    }, e.getIsIdle = function () {\n      return this._isIdle;\n    }, e.registerSpring = function (t) {\n      this._springRegistry[t.getId()] = t;\n    }, e.deregisterSpring = function (t) {\n      E(this._activeSprings, t), delete this._springRegistry[t.getId()];\n    }, e.advance = function (t, e) {\n      for (var i = this; this._idleSpringIndices.length > 0;) this._idleSpringIndices.pop();\n      for (this._activeSprings.filter(Boolean).forEach(function (n) {\n        n.systemShouldAdvance() ? n.advance(t / 1e3, e / 1e3) : i._idleSpringIndices.push(i._activeSprings.indexOf(n));\n      }); this._idleSpringIndices.length > 0;) {\n        var n = this._idleSpringIndices.pop();\n        n >= 0 && this._activeSprings.splice(n, 1);\n      }\n    }, e.loop = function (t) {\n      var e;\n      -1 === this._lastTimeMillis && (this._lastTimeMillis = t - 1);\n      var i = t - this._lastTimeMillis;\n      this._lastTimeMillis = t;\n      var n = 0,\n        r = this.listeners.length;\n      for (n = 0; n < r; n++) (e = this.listeners[n]).onBeforeIntegrate && e.onBeforeIntegrate(this);\n      for (this.advance(t, i), 0 === this._activeSprings.length && (this._isIdle = !0, this._lastTimeMillis = -1), n = 0; n < r; n++) (e = this.listeners[n]).onAfterIntegrate && e.onAfterIntegrate(this);\n      this._isIdle || this.looper.run();\n    }, e.activateSpring = function (t) {\n      var e = this._springRegistry[t];\n      -1 === this._activeSprings.indexOf(e) && this._activeSprings.push(e), this.getIsIdle() && (this._isIdle = !1, this.looper.run());\n    }, t;\n  }(),\n  w = new O(),\n  x = function (t) {\n    var e = t.springConfig,\n      i = e.overshootClamping,\n      n = t.getOnUpdateFunc,\n      r = t.onAnimationEnd,\n      s = t.onSpringActivate,\n      a = w.createSpring(e.stiffness, e.damping);\n    a.setOvershootClampingEnabled(!!i);\n    var o = {\n      onSpringActivate: s,\n      onSpringAtRest: function () {\n        a.destroy(), r();\n      },\n      onSpringUpdate: n({\n        spring: a,\n        onAnimationEnd: r\n      })\n    };\n    return a.addListener(o), a;\n  },\n  U = function (t) {\n    var e = x(t);\n    return e.setEndValue(1), e;\n  },\n  V = function (t, e) {\n    if (void 0 === e && (e = {}), t && t.length) {\n      e.reverse && t.reverse();\n      var i,\n        n = \"number\" != typeof (i = e.speed) ? 1.1 : 1 + Math.min(Math.max(5 * i, 0), 5),\n        r = 1 / Math.max(Math.min(t.length, 100), 10),\n        s = t.map(function (t, e) {\n          var i = t.getOnUpdateFunc;\n          return t.getOnUpdateFunc = function (t) {\n            var a = i(t);\n            return function (t) {\n              var i = t.getCurrentValue();\n              (i = i < .01 ? 0 : i > .99 ? 1 : i) >= r && s[e + 1] && s[e + 1](Math.max(Math.min(i * n, 1), 0)), a(t);\n            };\n          }, t;\n        }).map(function (t) {\n          var e = x(t);\n          if (e) return e.setEndValue.bind(e);\n        }).filter(Boolean);\n      s[0] && s[0](1);\n    }\n  },\n  F = function (t) {\n    return [0, 1, 4, 5, 12, 13].map(function (e) {\n      return t[e];\n    });\n  },\n  P = function (t) {\n    return t.top < window.innerHeight && t.bottom > 0 && t.left < window.innerWidth && t.right > 0;\n  };\nfunction R(t) {\n  return JSON.parse(t.dataset.flipConfig || \"{}\");\n}\nvar T = function (t, e) {\n    var i;\n    return u(t, ((i = {})[e[0]] = e[1], i));\n  },\n  D = function (t, e) {\n    return p(e ? document.querySelectorAll('[data-portal-key=\"' + e + '\"]') : t.querySelectorAll(\"[data-flip-id]\"));\n  },\n  M = function (t) {\n    return t.map(function (t) {\n      return [t, t.getBoundingClientRect()];\n    });\n  },\n  k = function (l) {\n    var d,\n      h = l.cachedOrderedFlipIds,\n      g = void 0 === h ? [] : h,\n      y = l.inProgressAnimations,\n      _ = void 0 === y ? {} : y,\n      S = l.flippedElementPositionsBeforeUpdate,\n      E = void 0 === S ? {} : S,\n      A = l.flipCallbacks,\n      C = void 0 === A ? {} : A,\n      b = l.containerEl,\n      I = l.applyTransformOrigin,\n      O = l.spring,\n      w = l.debug,\n      x = l.portalKey,\n      k = l.staggerConfig,\n      j = void 0 === k ? {} : k,\n      B = l.decisionData,\n      N = void 0 === B ? {} : B,\n      L = l.handleEnterUpdateDelete,\n      q = l.onComplete,\n      W = l.onStart,\n      K = M(D((d = {\n        element: b,\n        portalKey: x\n      }).element, d.portalKey)).map(function (t) {\n        var e = t[0],\n          i = t[1],\n          n = window.getComputedStyle(e);\n        return [e.dataset.flipId, {\n          element: e,\n          rect: i,\n          opacity: parseFloat(n.opacity),\n          transform: n.transform\n        }];\n      }).reduce(T, {}),\n      X = function (t) {\n        var e = t.containerEl,\n          i = t.portalKey;\n        return i ? function (t) {\n          return function (e) {\n            return p(document.querySelectorAll('[data-portal-key=\"' + t + '\"]' + e));\n          };\n        }(i) : e ? function (t) {\n          var e = Math.random().toFixed(5);\n          return t.dataset.flipperId = e, function (i) {\n            return p(t.querySelectorAll('[data-flipper-id=\"' + e + '\"] ' + i));\n          };\n        }(e) : function () {\n          return [];\n        };\n      }({\n        containerEl: b,\n        portalKey: x\n      }),\n      Y = function (t) {\n        return function (e) {\n          return t('[data-flip-id=\"' + e + '\"]')[0];\n        };\n      }(X),\n      H = function (t) {\n        return E[t] && K[t];\n      },\n      J = Object.keys(E).concat(Object.keys(K)).filter(function (t) {\n        return !H(t);\n      }),\n      z = {\n        flipCallbacks: C,\n        getElement: Y,\n        flippedElementPositionsBeforeUpdate: E,\n        flippedElementPositionsAfterUpdate: K,\n        inProgressAnimations: _,\n        decisionData: N\n      },\n      G = function (t) {\n        var e,\n          i = t.unflippedIds,\n          n = t.flipCallbacks,\n          r = t.getElement,\n          s = t.flippedElementPositionsBeforeUpdate,\n          a = t.flippedElementPositionsAfterUpdate,\n          o = t.inProgressAnimations,\n          l = t.decisionData,\n          p = i.filter(function (t) {\n            return a[t];\n          }).filter(function (t) {\n            return n[t] && n[t].onAppear;\n          }),\n          c = i.filter(function (t) {\n            return s[t] && n[t] && n[t].onExit;\n          }),\n          u = new Promise(function (t) {\n            e = t;\n          }),\n          d = [],\n          f = 0,\n          h = c.map(function (t, i) {\n            var r = s[t].domDataForExitAnimations,\n              a = r.element,\n              p = r.parent,\n              c = r.childPosition,\n              u = c.top,\n              h = c.left,\n              g = c.width,\n              m = c.height;\n            \"static\" === getComputedStyle(p).position && (p.style.position = \"relative\"), a.style.transform = \"matrix(1, 0, 0, 1, 0, 0)\", a.style.position = \"absolute\", a.style.top = u + \"px\", a.style.left = h + \"px\", a.style.height = m + \"px\", a.style.width = g + \"px\";\n            var v = d.filter(function (t) {\n              return t[0] === p;\n            })[0];\n            v || (v = [p, document.createDocumentFragment()], d.push(v)), v[1].appendChild(a), f += 1;\n            var y = function () {\n              try {\n                p.removeChild(a);\n              } catch (t) {} finally {\n                0 == (f -= 1) && e();\n              }\n            };\n            return o[t] = {\n              stop: y\n            }, function () {\n              return n[t].onExit(a, i, y, l);\n            };\n          });\n        return d.forEach(function (t) {\n          t[0].appendChild(t[1]);\n        }), h.length || e(), {\n          hideEnteringElements: function () {\n            p.forEach(function (t) {\n              var e = r(t);\n              e && (e.style.opacity = \"0\");\n            });\n          },\n          animateEnteringElements: function () {\n            p.forEach(function (t, e) {\n              var i = r(t);\n              i && n[t].onAppear(i, e, l);\n            });\n          },\n          animateExitingElements: function () {\n            return h.forEach(function (t) {\n              return t();\n            }), u;\n          }\n        };\n      }(u({}, z, {\n        unflippedIds: J\n      })),\n      Q = G.hideEnteringElements,\n      Z = G.animateEnteringElements,\n      $ = G.animateExitingElements,\n      tt = u({}, z, {\n        containerEl: b,\n        flippedIds: g.filter(H),\n        applyTransformOrigin: I,\n        spring: O,\n        debug: w,\n        staggerConfig: j,\n        scopedSelector: X,\n        onComplete: q\n      });\n    W && W(b, N);\n    var et = function (l) {\n      var d,\n        h = l.flippedIds,\n        g = l.flipCallbacks,\n        y = l.inProgressAnimations,\n        _ = l.flippedElementPositionsBeforeUpdate,\n        S = l.flippedElementPositionsAfterUpdate,\n        E = l.applyTransformOrigin,\n        A = l.spring,\n        C = l.getElement,\n        b = l.debug,\n        I = l.staggerConfig,\n        O = void 0 === I ? {} : I,\n        w = l.decisionData,\n        x = void 0 === w ? {} : w,\n        T = l.onComplete,\n        D = l.containerEl,\n        M = new Promise(function (t) {\n          d = t;\n        });\n      if (T && M.then(function () {\n        return T(D, x);\n      }), !h.length) return function () {\n        return d([]), M;\n      };\n      var k = [],\n        j = C(h[0]),\n        B = j ? j.ownerDocument.querySelector(\"body\") : document.querySelector(\"body\"),\n        N = (c(h), h.map(function (l) {\n          var c = _[l].rect,\n            h = S[l].rect,\n            C = _[l].opacity,\n            b = S[l].opacity,\n            I = h.width < 1 || h.height < 1,\n            O = S[l].element;\n          if (!P(c) && !P(h)) return !1;\n          if (!O) return !1;\n          var w,\n            U,\n            V,\n            T = R(O),\n            D = (V = (U = void 0 === (w = {\n              flipperSpring: A,\n              flippedSpring: T.spring\n            }) ? {} : w).flippedSpring, u({}, m.noWobble, v(U.flipperSpring), v(V))),\n            M = !0 === T.stagger ? \"default\" : T.stagger,\n            j = {\n              element: O,\n              id: l,\n              stagger: M,\n              springConfig: D\n            };\n          if (g[l] && g[l].shouldFlip && !g[l].shouldFlip(x.previous, x.current)) return !1;\n          var L = Math.abs(c.left - h.left) + Math.abs(c.top - h.top),\n            q = Math.abs(c.width - h.width) + Math.abs(c.height - h.height),\n            W = Math.abs(b - C);\n          if (0 === c.height && 0 === h.height || 0 === c.width && 0 === h.width || L < .5 && q < .5 && W < .01) return !1;\n          var K = t(S[l].transform),\n            X = {\n              matrix: K\n            },\n            Y = {\n              matrix: []\n            },\n            H = [K];\n          T.translate && (H.push(e(c.left - h.left)), H.push(i(c.top - h.top))), T.scale && (H.push(n(Math.max(c.width, 1) / Math.max(h.width, 1))), H.push(r(Math.max(c.height, 1) / Math.max(h.height, 1)))), T.opacity && (Y.opacity = C, X.opacity = b);\n          var J = [];\n          if (!g[l] || !g[l].shouldInvert || g[l].shouldInvert(x.previous, x.current)) {\n            var z = function (t, e) {\n              return p(t.querySelectorAll('[data-inverse-flip-id=\"' + e + '\"]'));\n            }(O, l);\n            J = z.map(function (t) {\n              return [t, R(t)];\n            });\n          }\n          Y.matrix = F(H.reduce(s)), X.matrix = F(X.matrix);\n          var G,\n            Q = function (t) {\n              var e = t.element,\n                i = t.invertedChildren,\n                n = t.body;\n              return function (t) {\n                var r = t.matrix,\n                  s = t.opacity,\n                  o = t.forceMinVals;\n                if (a(s) && (e.style.opacity = s + \"\"), o && (e.style.minHeight = \"1px\", e.style.minWidth = \"1px\"), r) {\n                  var l = function (t) {\n                    return \"matrix(\" + t.join(\", \") + \")\";\n                  }(r);\n                  e.style.transform = l, i && function (t) {\n                    var e = t.matrix,\n                      i = t.body;\n                    t.invertedChildren.forEach(function (t) {\n                      var n = t[0],\n                        r = t[1];\n                      if (i.contains(n)) {\n                        var s = e[0],\n                          a = e[3],\n                          o = e[5],\n                          l = {\n                            translateX: 0,\n                            translateY: 0,\n                            scaleX: 1,\n                            scaleY: 1\n                          },\n                          p = \"\";\n                        r.translate && (l.translateX = -e[4] / s, l.translateY = -o / a, p += \"translate(\" + l.translateX + \"px, \" + l.translateY + \"px)\"), r.scale && (l.scaleX = 1 / s, l.scaleY = 1 / a, p += \" scale(\" + l.scaleX + \", \" + l.scaleY + \")\"), n.style.transform = p;\n                      }\n                    });\n                  }({\n                    invertedChildren: i,\n                    matrix: r,\n                    body: n\n                  });\n                }\n              };\n            }({\n              element: O,\n              invertedChildren: J,\n              body: B\n            });\n          if (g[l] && g[l].onComplete) {\n            var Z = g[l].onComplete;\n            G = function () {\n              return Z(O, x);\n            };\n          }\n          var $ = a(Y.opacity) && a(X.opacity) && Y.opacity !== X.opacity,\n            tt = !1;\n          return u({}, j, {\n            stagger: M,\n            springConfig: D,\n            getOnUpdateFunc: function (t) {\n              var e = t.spring,\n                i = t.onAnimationEnd;\n              return y[l] = {\n                destroy: e.destroy.bind(e),\n                onAnimationEnd: i\n              }, function (t) {\n                g[l] && g[l].onSpringUpdate && g[l].onSpringUpdate(t.getCurrentValue()), tt || (tt = !0, g[l] && g[l].onStart && g[l].onStart(O, x));\n                var e = t.getCurrentValue();\n                if (B.contains(O)) {\n                  var i = {\n                    matrix: []\n                  };\n                  i.matrix = Y.matrix.map(function (t, i) {\n                    return f(t, X.matrix[i], e);\n                  }), $ && (i.opacity = f(Y.opacity, X.opacity, e)), Q(i);\n                } else t.destroy();\n              };\n            },\n            initializeFlip: function () {\n              Q({\n                matrix: Y.matrix,\n                opacity: $ ? Y.opacity : void 0,\n                forceMinVals: I\n              }), g[l] && g[l].onStartImmediate && g[l].onStartImmediate(O, x), T.transformOrigin ? O.style.transformOrigin = T.transformOrigin : E && (O.style.transformOrigin = \"0 0\"), J.forEach(function (t) {\n                var e = t[0],\n                  i = t[1];\n                i.transformOrigin ? e.style.transformOrigin = i.transformOrigin : E && (e.style.transformOrigin = \"0 0\");\n              });\n            },\n            onAnimationEnd: function (t) {\n              delete y[l], o(G) && G(), O.style.transform = \"\", J.forEach(function (t) {\n                t[0].style.transform = \"\";\n              }), I && O && (O.style.minHeight = \"\", O.style.minWidth = \"\"), t || (k.push(l), k.length >= N.length && d(k));\n            },\n            delayUntil: T.delayUntil\n          });\n        }).filter(Boolean));\n      if (N.forEach(function (t) {\n        return (0, t.initializeFlip)();\n      }), b) return function () {};\n      var L = N.filter(function (t) {\n          return t.delayUntil && (e = t.delayUntil, N.filter(function (t) {\n            return t.id === e;\n          }).length);\n          var e;\n        }),\n        q = {},\n        W = {},\n        K = {};\n      L.forEach(function (t) {\n        t.stagger ? (K[t.stagger] = !0, W[t.delayUntil] ? W[t.delayUntil].push(t.stagger) : W[t.delayUntil] = [t.stagger]) : q[t.delayUntil] ? q[t.delayUntil].push(t) : q[t.delayUntil] = [t];\n      });\n      var X = N.filter(function (t) {\n          return t.stagger;\n        }).reduce(function (t, e) {\n          return t[e.stagger] ? t[e.stagger].push(e) : t[e.stagger] = [e], t;\n        }, {}),\n        Y = N.filter(function (t) {\n          return -1 === L.indexOf(t);\n        });\n      return Y.forEach(function (t) {\n        t.onSpringActivate = function () {\n          q[t.id] && q[t.id].forEach(U), W[t.id] && Object.keys(W[t.id].reduce(function (t, e) {\n            var i;\n            return u(t, ((i = {})[e] = !0, i));\n          }, {})).forEach(function (t) {\n            V(X[t], O[t]);\n          });\n        };\n      }), function () {\n        return N.length || d([]), Y.filter(function (t) {\n          return !t.stagger;\n        }).forEach(U), Object.keys(X).forEach(function (t) {\n          K[t] || V(X[t], O[t]);\n        }), M;\n      };\n    }(tt);\n    L ? L({\n      hideEnteringElements: Q,\n      animateEnteringElements: Z,\n      animateExitingElements: $,\n      animateFlippedElements: et\n    }) : (Q(), $().then(Z), et());\n  },\n  j = function (t) {\n    var e = t.element,\n      i = t.flipCallbacks,\n      n = void 0 === i ? {} : i,\n      r = t.inProgressAnimations,\n      s = void 0 === r ? {} : r,\n      a = D(e, t.portalKey),\n      o = p(e.querySelectorAll(\"[data-inverse-flip-id]\")),\n      l = {},\n      c = [],\n      d = {};\n    a.filter(function (t) {\n      return n && n[t.dataset.flipId] && n[t.dataset.flipId].onExit;\n    }).forEach(function (t) {\n      var e = t.parentNode;\n      if (t.closest) {\n        var i = t.closest(\"[data-exit-container]\");\n        i && (e = i);\n      }\n      var n = c.findIndex(function (t) {\n        return t[0] === e;\n      });\n      -1 === n && (c.push([e, e.getBoundingClientRect()]), n = c.length - 1), l[t.dataset.flipId] = c[n][1], d[t.dataset.flipId] = e;\n    });\n    var f = M(a),\n      h = f.map(function (t) {\n        var e = t[0],\n          i = t[1],\n          r = {};\n        if (n && n[e.dataset.flipId] && n[e.dataset.flipId].onExit) {\n          var s = l[e.dataset.flipId];\n          u(r, {\n            element: e,\n            parent: d[e.dataset.flipId],\n            childPosition: {\n              top: i.top - s.top,\n              left: i.left - s.left,\n              width: i.width,\n              height: i.height\n            }\n          });\n        }\n        return [e.dataset.flipId, {\n          rect: i,\n          opacity: parseFloat(window.getComputedStyle(e).opacity || \"1\"),\n          domDataForExitAnimations: r\n        }];\n      }).reduce(T, {});\n    return function (t, e) {\n      Object.keys(t).forEach(function (e) {\n        t[e].destroy && t[e].destroy(), t[e].onAnimationEnd && t[e].onAnimationEnd(!0), delete t[e];\n      }), e.forEach(function (t) {\n        t.style.transform = \"\", t.style.opacity = \"\";\n      });\n    }(s, a.concat(o)), {\n      flippedElementPositions: h,\n      cachedOrderedFlipIds: f.map(function (t) {\n        return t[0].dataset.flipId;\n      })\n    };\n  },\n  B = function () {\n    function t(t) {\n      this.applyTransformOrigin = !0, u(this, t), this.inProgressAnimations = {}, this.flipCallbacks = {}, this.recordBeforeUpdate = this.recordBeforeUpdate.bind(this), this.update = this.update.bind(this), this.addFlipped = this.addFlipped.bind(this), this.addInverted = this.addInverted.bind(this);\n    }\n    var e = t.prototype;\n    return e.recordBeforeUpdate = function () {\n      this.snapshot = j({\n        element: this.element,\n        flipCallbacks: this.flipCallbacks,\n        inProgressAnimations: this.inProgressAnimations\n      });\n    }, e.update = function (t, e) {\n      this.snapshot && (k({\n        flippedElementPositionsBeforeUpdate: this.snapshot.flippedElementPositions,\n        cachedOrderedFlipIds: this.snapshot.cachedOrderedFlipIds,\n        containerEl: this.element,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.applyTransformOrigin,\n        spring: this.spring,\n        debug: this.debug,\n        staggerConfig: this.staggerConfig,\n        handleEnterUpdateDelete: this.handleEnterUpdateDelete,\n        decisionData: {\n          previous: t,\n          current: e\n        },\n        onComplete: this.onComplete,\n        onStart: this.onStart\n      }), delete this.snapshot);\n    }, e.addFlipped = function (t) {\n      var e = t.element,\n        i = t.flipId,\n        n = t.opacity,\n        r = t.translate,\n        s = t.scale,\n        a = t.transformOrigin,\n        o = t.spring,\n        l = t.stagger,\n        p = t.delayUntil,\n        c = t.onAppear,\n        d = t.onStart,\n        f = t.onSpringUpdate,\n        h = t.onComplete,\n        g = t.onExit,\n        m = t.shouldFlip,\n        v = t.shouldInvert;\n      if (!e) throw new Error(\"no element provided\");\n      if (!i) throw new Error(\"No flipId provided\");\n      var y = {\n        scale: s,\n        translate: r,\n        opacity: n,\n        transformOrigin: a,\n        spring: o,\n        stagger: l,\n        delayUntil: p\n      };\n      y.scale || y.translate || y.opacity || u(y, {\n        translate: !0,\n        scale: !0,\n        opacity: !0\n      }), i && (e.dataset.flipId = String(i)), e.dataset.flipConfig = JSON.stringify(y), this.flipCallbacks[i] = {\n        shouldFlip: m,\n        shouldInvert: v,\n        onAppear: c,\n        onStart: d,\n        onSpringUpdate: f,\n        onComplete: h,\n        onExit: g\n      };\n    }, e.addInverted = function (t) {\n      var e = t.element,\n        i = t.parent,\n        n = t.opacity,\n        r = t.translate,\n        s = t.scale,\n        a = t.transformOrigin;\n      if (!e) throw new Error(\"no element provided\");\n      if (!i) throw new Error(\"parent must be provided\");\n      var o = i.dataset.flipId,\n        l = {\n          scale: s,\n          translate: r,\n          opacity: n,\n          transformOrigin: a\n        };\n      l.scale || l.translate || l.opacity || u(l, {\n        translate: !0,\n        scale: !0,\n        opacity: !0\n      }), e.dataset.inverseFlipId = o, e.dataset.flipConfig = JSON.stringify(l);\n    }, t;\n  }(),\n  N = new O(),\n  L = function (t) {\n    var e = t.values,\n      i = t.onUpdate,\n      n = t.delay,\n      r = void 0 === n ? 0 : n,\n      s = t.onComplete,\n      a = u({}, m.noWobble, v(t.config)),\n      o = a.overshootClamping,\n      l = N.createSpring(a.stiffness, a.damping);\n    return l.setOvershootClampingEnabled(!!o), l.addListener({\n      onSpringAtRest: function (t) {\n        s && s(), t.destroy();\n      },\n      onSpringUpdate: function (t) {\n        var n = t.getCurrentValue();\n        if (!e) return i(n);\n        var r = Object.keys(e).map(function (t) {\n          return [t, f(e[t][0], e[t][1], n)];\n        }).reduce(function (t, e) {\n          var i;\n          return Object.assign(t, ((i = {})[e[0]] = e[1], i));\n        }, {});\n        i(r);\n      }\n    }), r ? setTimeout(function () {\n      l.setEndValue(1);\n    }, r) : l.setEndValue(1), l;\n  };\nexport { B as Flipper, g as constants, j as getFlippedElementPositionsBeforeUpdate, k as onFlipKeyUpdate, L as spring, h as utilities };","map":{"version":3,"sources":["../src/utilities/index.ts","../src/forked-rebound/onFrame.js","../src/constants.ts","../src/springSettings/index.ts","../src/forked-rebound/util.js","../src/forked-rebound/Loopers.js","../src/forked-rebound/Spring.js","../src/forked-rebound/SpringSystem.js","../src/flip/animateFlippedElements/spring/index.ts","../src/flip/animateFlippedElements/index.ts","../src/flip/getFlippedElementPositions/utilities.ts","../src/flip/index.ts","../src/flip/getFlippedElementPositions/getFlippedElementPositionsAfterUpdate/index.ts","../src/flip/animateUnflippedElements/index.ts","../src/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/index.ts","../src/Flipper.ts","../src/Spring/index.ts"],"names":["isNumber","x","isFunction","isObject","Object","prototype","toString","call","toArray","arrayLike","Array","slice","apply","getDuplicateValsAsStrings","arr","obj","reduce","acc","curr","keys","filter","val","assign","target","forEach","arg","nextKey","hasOwnProperty","tweenProp","start","end","position","_onFrame","window","requestAnimationFrame","callback","setTimeout","springPresets","noWobble","stiffness","damping","gentle","veryGentle","wobbly","stiff","normalizeSpring","spring","indexOf","flipperSpring","flippedSpring","Date","now","performanceNow","performance","removeFirst","array","item","idx","splice","AnimationLooper","run","onFrame","_this","springSystem","loop","PhysicsState","this","velocity","ID","Spring","_id","_springSystem","listeners","_startValue","_currentState","_displacementFromRestThreshold","_endValue","_overshootClampingEnabled","_previousState","_restSpeedThreshold","_tempState","_timeAccumulator","_wasAtRest","_cachedSpringConfig","getId","destroy","deregisterSpring","setSpringConfig","springConfig","_springConfig","getCurrentValue","getDisplacementDistanceForState","state","Math","abs","setEndValue","endValue","prevEndValue","isAtRest","activateSpring","i","len","length","onChange","onSpringEndStateChange","setVelocity","setCurrentValue","currentValue","listener","onSpringUpdate","setAtRest","setOvershootClampingEnabled","enabled","isOvershooting","tension","advance","time","realDeltaTime","adjustedDeltaTime","friction","tempPosition","tempVelocity","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","_interpolate","notifyActivate","notifyAtRest","notifyPositionUpdated","Boolean","onSpringActivate","_this2","_onActivateCalled","onSpringAtRest","systemShouldAdvance","wasAtRest","alpha","addListener","newListener","push","addOneTimeListener","func","removeListener","key","listenerToRemove","SpringSystem","looper","_activeSprings","_idleSpringIndices","_isIdle","_lastTimeMillis","_springRegistry","createSpring","createSpringWithConfig","registerSpring","getIsIdle","deltaTime","pop","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","springId","createSuspendedSpring","flipData","overshootClamping","getOnUpdateFunc","onAnimationEnd","flipped","speedConfig","min","max","createStaggeredSprings","flippedArray","staggerConfig","reverse","normalizedSpeed","speed","nextThreshold","setEndValueFuncs","map","cachedGetOnUpdate","onUpdate","args","bind","convertMatrix3dArrayTo2dArray","matrix","index","join","invertedChildren","body","child","childFlipConfig","contains","scaleX","scaleY","translateY","inverseVals","translateX","transformString","translate","scale","style","transform","element","opacity","forceMinVals","minHeight","minWidth","stringTransform","convertMatrix2dArrayToString","invertTransformsForChildren","rectInViewport","top","bottom","left","right","innerHeight","innerWidth","id","querySelectorAll","extractFlipConfig","JSON","parse","dataset","flipConfig","flippedIds","flipCallbacks","inProgressAnimations","flippedElementPositionsBeforeUpdate","flippedElementPositionsAfterUpdate","applyTransformOrigin","getElement","debug","decisionData","onComplete","containerEl","closureResolve","flipCompletedPromise","Promise","resolve","then","completedAnimationIds","firstElement","ownerDocument","querySelector","document","flipDataArray","prevRect","rect","currentRect","prevOpacity","currentOpacity","needsForcedMinVals","width","height","stagger","toReturn","shouldFlip","previous","current","translateDifference","scaleDifference","opacityDifference","currentTransform","Rematrix","toVals","fromVals","transformsArray","shouldInvert","invertedChildElements","getInvertedChildren","c","applyStyles","createApplyStylesFunc","cachedOnComplete","isCancellation","animateOpacity","onStartCalled","onStart","vals","fromVal","undefined","onStartImmediate","transformOrigin","initializeFlip","delayUntil","flipId","f","delayedFlip","delayUntilSprings","delayUntilStaggers","delayedStaggerKeys","flip","staggerDict","immediateFlip","staggerKey","addTupleToObject","getAllElements","portalKey","getRects","flippedElements","getBoundingClientRect","selector","tempFlipperId","random","toFixed","flipperId","createPortalScopedSelector","createFlipperScopedSelector","scopedSelector","onFlipKeyUpdate","cachedOrderedFlipIds","handleEnterUpdateDelete","createScopedSelector","createGetElementFunc","isFlipped","unflippedIds","concat","baseArgs","hideEnteringElements","animateEnteringElements","animateExitingElements","animateUnflippedElements","animateFlippedElementsArgs","animateFlippedElements","childBCR","computedStyle","getComputedStyle","parseFloat","animatedEnteringElementIds","onAppear","animatedExitingElementIds","onExit","promiseToReturn","fragmentTuples","exitingElementCount","onExitCallbacks","domDataForExitAnimations","parent","childPosition","fragmentTuple","t","createDocumentFragment","appendChild","stop","removeChild","DOMException","animatingElements","el","getFlippedElementPositionsBeforeUpdate","inverseFlippedElements","childIdsToParentBCRs","parentBCRs","childIdsToParents","parentNode","closest","exitContainer","bcrIndex","findIndex","n","filteredFlippedElements","parentBCR","flippedElementPositions","cancelInProgressAnimations","Flipper","options","recordBeforeUpdate","update","addFlipped","addInverted","snapshot","prevDecisionData","currentDecisionData","Error","String","stringify","inverseFlipId","createSimpleSpring","config","values","delay","springVal","currentValues","value"],"mappings":"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","sourcesContent":["import { IndexableObject } from './types'\n\nexport const isNumber = (x: any) => typeof x === 'number'\n\nexport const isFunction = (x: any) => typeof x === 'function'\n\nexport const isObject = (x: any) =>\n  Object.prototype.toString.call(x) === '[object Object]'\n\nexport const toArray = (arrayLike: ArrayLike<any>) =>\n  Array.prototype.slice.apply(arrayLike)\n\nexport const getDuplicateValsAsStrings = (arr: string[]): string[] => {\n  const baseObj: IndexableObject = {}\n  const obj = arr.reduce((acc, curr) => {\n    acc[curr] = (acc[curr] || 0) + 1\n    return acc\n  }, baseObj)\n  return Object.keys(obj).filter(val => obj[val] > 1)\n}\n\n// tslint only likes this with a regular function, not an arrow function\nexport function assign(target: IndexableObject, ...args: IndexableObject[]) {\n  args.forEach(arg => {\n    if (!arg) {\n      return\n    }\n    // Skip over if undefined or null\n    for (const nextKey in arg) {\n      // Avoid bugs when hasOwnProperty is shadowed\n      if (Object.prototype.hasOwnProperty.call(arg, nextKey)) {\n        target[nextKey] = arg[nextKey]\n      }\n    }\n  })\n  return target\n}\n\nexport const tweenProp = (start: number, end: number, position: number) =>\n  start + (end - start) * position\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nlet _onFrame\nif (typeof window !== \"undefined\") {\n  _onFrame = window.requestAnimationFrame\n}\n\n_onFrame =\n  _onFrame ||\n  function(callback) {\n    window.setTimeout(callback, 1000 / 60)\n  }\n\nexport default _onFrame\n","export const DATA_FLIP_ID = 'data-flip-id'\nexport const DATA_INVERSE_FLIP_ID = 'data-inverse-flip-id'\nexport const DATA_FLIP_COMPONENT_ID = 'data-flip-component-id'\nexport const DATA_FLIP_CONFIG = 'data-flip-config'\nexport const DATA_PORTAL_KEY = 'data-portal-key'\nexport const DATA_EXIT_CONTAINER = 'data-exit-container'\n","import { isObject, assign } from '../utilities'\nimport { SpringPresets, SpringConfig, SpringOption } from './types'\n\n// adapted from\n// https://github.com/chenglou/react-motion/blob/master/src/presets.js\nexport const springPresets: SpringPresets = {\n  noWobble: { stiffness: 200, damping: 26 },\n  gentle: { stiffness: 120, damping: 14 },\n  veryGentle: { stiffness: 130, damping: 17 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 260, damping: 26 }\n}\n\nfunction argIsSpringConfig(\n  arg: SpringConfig | keyof SpringPresets | undefined\n): arg is SpringConfig {\n  return isObject(arg)\n}\n\nexport const normalizeSpring = (\n  spring?: SpringConfig | keyof SpringPresets | any\n) => {\n  if (argIsSpringConfig(spring)) {\n    return spring\n  } else if (Object.keys(springPresets).indexOf(spring) > -1) {\n    return springPresets[spring]\n  } else {\n    return {}\n  }\n}\n\nexport const getSpringConfig = ({\n  flipperSpring,\n  flippedSpring\n}: { flipperSpring?: SpringOption; flippedSpring?: SpringOption } = {}) => {\n  return assign(\n    {},\n    springPresets.noWobble,\n    normalizeSpring(flipperSpring),\n    normalizeSpring(flippedSpring)\n  )\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nexport { default as onFrame } from './onFrame'\n\nconst start = Date.now()\nexport const performanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function'\n    ? () => performance.now()\n    : () => Date.now() - start\n\n// Lop off the first occurence of the reference in the Array.\nexport function removeFirst(array, item) {\n  const idx = array.indexOf(item)\n  idx !== -1 && array.splice(idx, 1)\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { onFrame, performanceNow } from \"./util\"\n\n/**\n * Plays each frame of the SpringSystem on animation\n * timing loop. This is the default type of looper for a new spring system\n * as it is the most common when developing UI.\n * @public\n */\nexport class AnimationLooper {\n  run() {\n    onFrame(() => {\n      this.springSystem.loop(performanceNow())\n    })\n  }\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { removeFirst } from './util'\n\nclass PhysicsState {\n  constructor() {\n    this.position = 0\n    this.velocity = 0\n  }\n}\n\nlet ID = 0\nconst MAX_DELTA_TIME_SEC = 0.064\nconst SOLVER_TIMESTEP_SEC = 0.001\n\n/**\n * Provides a model of a classical spring acting to\n * resolve a body to equilibrium. Springs have configurable\n * tension which is a force multipler on the displacement of the\n * spring from its rest point or `endValue` as defined by [Hooke's\n * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n * configurable friction, which ensures that they do not oscillate\n * infinitely. When a Spring is displaced by updating it's resting\n * or `currentValue`, the SpringSystems that contain that Spring\n * will automatically start looping to solve for equilibrium. As each\n * timestep passes, `SpringListener` objects attached to the Spring\n * will be notified of the updates providing a way to drive an\n * animation off of the spring's resolution curve.\n * @public\n */\nclass Spring {\n  constructor(springSystem) {\n    this._id = `s${ID++}`\n    this._springSystem = springSystem\n\n    this.listeners = []\n    this._startValue = 0\n\n    this._currentState = new PhysicsState()\n    this._displacementFromRestThreshold = 0.001\n    this._endValue = 0\n    this._overshootClampingEnabled = false\n    this._previousState = new PhysicsState()\n    this._restSpeedThreshold = 0.001\n\n    this._tempState = new PhysicsState()\n    this._timeAccumulator = 0\n    this._wasAtRest = true\n    // hack from alex -- only call 1x\n    this._onActivateCalled\n    this._cachedSpringConfig = {}\n  }\n\n  getId() {\n    return this._id\n  }\n\n  /**\n   * Remove a Spring from simulation and clear its listeners.\n   * @public\n   */\n  destroy() {\n    this.listeners = []\n    this._springSystem.deregisterSpring(this)\n  }\n\n  /**\n   * Set the configuration values for this Spring. A SpringConfig\n   * contains the tension and friction values used to solve for the\n   * equilibrium of the Spring in the physics loop.\n   * @public\n   */\n  setSpringConfig(springConfig) {\n    this._springConfig = springConfig\n    return this\n  }\n  /**\n   * Retrieve the current value of the Spring.\n   * @public\n   */\n  getCurrentValue() {\n    return this._currentState.position\n  }\n\n  /**\n   * Get the absolute distance of the Spring from a given state value\n   */\n  getDisplacementDistanceForState(state) {\n    return Math.abs(this._endValue - state.position)\n  }\n\n  /**\n   * Set the endValue or resting position of the spring. If this\n   * value is different than the current value, the SpringSystem will\n   * be notified and will begin running its solver loop to resolve\n   * the Spring to equilibrium. Any listeners that are registered\n   * for onSpringEndStateChange will also be notified of this update\n   * immediately.\n   * @public\n   */\n\n  setEndValue(endValue) {\n    if (endValue === this._endValue) return this\n    this.prevEndValue = endValue\n    if (this._endValue === endValue && this.isAtRest()) {\n      return this\n    }\n    this._startValue = this.getCurrentValue()\n    this._endValue = endValue\n    this._springSystem.activateSpring(this.getId())\n    for (let i = 0, len = this.listeners.length; i < len; i++) {\n      const listener = this.listeners[i]\n      const onChange = listener.onSpringEndStateChange\n      onChange && onChange(this)\n    }\n    return this\n  }\n\n  /**\n   * Set the current velocity of the Spring, in pixels per second. As\n   * previously mentioned, this can be useful when you are performing\n   * a direct manipulation gesture. When a UI element is released you\n   * may call setVelocity on its animation Spring so that the Spring\n   * continues with the same velocity as the gesture ended with. The\n   * friction, tension, and displacement of the Spring will then\n   * govern its motion to return to rest on a natural feeling curve.\n   * @public\n   */\n  setVelocity(velocity) {\n    if (velocity === this._currentState.velocity) {\n      return this\n    }\n    this._currentState.velocity = velocity\n    this._springSystem.activateSpring(this.getId())\n    return this\n  }\n\n  setCurrentValue(currentValue) {\n    this._startValue = currentValue\n    this._currentState.position = currentValue\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i]\n      listener.onSpringUpdate && listener.onSpringUpdate(this)\n    }\n    return this\n  }\n\n  setAtRest() {\n    this._endValue = this._currentState.position\n    this._tempState.position = this._currentState.position\n    this._currentState.velocity = 0\n    return this\n  }\n\n  /**\n   * Enable overshoot clamping. This means that the Spring will stop\n   * immediately when it reaches its resting position regardless of\n   * any existing momentum it may have. This can be useful for certain\n   * types of animations that should not oscillate such as a scale\n   * down to 0 or alpha fade.\n   * @public\n   */\n  setOvershootClampingEnabled(enabled) {\n    this._overshootClampingEnabled = enabled\n    return this\n  }\n\n  /**\n   * Check if the Spring has gone past its end point by comparing\n   * the direction it was moving in when it started to the current\n   * position and end value.\n   * @public\n   */\n  isOvershooting() {\n    const start = this._startValue\n    const end = this._endValue\n    return (\n      this._springConfig.tension > 0 &&\n      ((start < end && this.getCurrentValue() > end) ||\n        (start > end && this.getCurrentValue() < end))\n    )\n  }\n\n  /**\n   * The main solver method for the Spring. It takes\n   * the current time and delta since the last time step and performs\n   * an RK4 integration to get the new position and velocity state\n   * for the Spring based on the tension, friction, velocity, and\n   * displacement of the Spring.\n   * @public\n   */\n  advance(time, realDeltaTime) {\n    let isAtRest = this.isAtRest()\n\n    if (isAtRest && this._wasAtRest) {\n      return\n    }\n\n    let adjustedDeltaTime = realDeltaTime\n    if (realDeltaTime > MAX_DELTA_TIME_SEC) {\n      adjustedDeltaTime = MAX_DELTA_TIME_SEC\n    }\n\n    this._timeAccumulator += adjustedDeltaTime\n\n    const tension = this._springConfig.tension\n    const friction = this._springConfig.friction\n    let position = this._currentState.position\n    let velocity = this._currentState.velocity\n    let tempPosition = this._tempState.position\n    let tempVelocity = this._tempState.velocity\n    let aVelocity\n    let aAcceleration\n    let bVelocity\n    let bAcceleration\n    let cVelocity\n    let cAcceleration\n    let dVelocity\n    let dAcceleration\n    let dxdt\n    let dvdt\n\n    while (this._timeAccumulator >= SOLVER_TIMESTEP_SEC) {\n      this._timeAccumulator -= SOLVER_TIMESTEP_SEC\n\n      if (this._timeAccumulator < SOLVER_TIMESTEP_SEC) {\n        this._previousState.position = position\n        this._previousState.velocity = velocity\n      }\n\n      aVelocity = velocity\n      aAcceleration =\n        tension * (this._endValue - tempPosition) - friction * velocity\n\n      tempPosition = position + aVelocity * SOLVER_TIMESTEP_SEC * 0.5\n      tempVelocity = velocity + aAcceleration * SOLVER_TIMESTEP_SEC * 0.5\n      bVelocity = tempVelocity\n      bAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      tempPosition = position + bVelocity * SOLVER_TIMESTEP_SEC * 0.5\n      tempVelocity = velocity + bAcceleration * SOLVER_TIMESTEP_SEC * 0.5\n      cVelocity = tempVelocity\n      cAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      tempPosition = position + cVelocity * SOLVER_TIMESTEP_SEC\n      tempVelocity = velocity + cAcceleration * SOLVER_TIMESTEP_SEC\n      dVelocity = tempVelocity\n      dAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      dxdt =\n        (1.0 / 6.0) * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity)\n      dvdt =\n        (1.0 / 6.0) *\n        (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration)\n\n      position += dxdt * SOLVER_TIMESTEP_SEC\n      velocity += dvdt * SOLVER_TIMESTEP_SEC\n    }\n\n    this._tempState.position = tempPosition\n    this._tempState.velocity = tempVelocity\n\n    this._currentState.position = position\n    this._currentState.velocity = velocity\n\n    if (this._timeAccumulator > 0) {\n      this._interpolate(this._timeAccumulator / SOLVER_TIMESTEP_SEC)\n    }\n\n    if (\n      this.isAtRest() ||\n      (this._overshootClampingEnabled && this.isOvershooting())\n    ) {\n      if (this._springConfig.tension > 0) {\n        this._startValue = this._endValue\n        this._currentState.position = this._endValue\n      } else {\n        this._endValue = this._currentState.position\n        this._startValue = this._endValue\n      }\n      this.setVelocity(0)\n      isAtRest = true\n    }\n\n    let notifyActivate = false\n    if (this._wasAtRest) {\n      this._wasAtRest = false\n      notifyActivate = true\n    }\n\n    let notifyAtRest = false\n    if (isAtRest) {\n      this._wasAtRest = true\n      notifyAtRest = true\n    }\n\n    this.notifyPositionUpdated(notifyActivate, notifyAtRest)\n  }\n\n  notifyPositionUpdated(notifyActivate, notifyAtRest) {\n    this.listeners.filter(Boolean).forEach(listener => {\n      if (\n        notifyActivate &&\n        listener.onSpringActivate &&\n        !this._onActivateCalled\n      ) {\n        listener.onSpringActivate(this)\n        this._onActivateCalled = true\n      }\n\n      if (listener.onSpringUpdate) {\n        listener.onSpringUpdate(this)\n      }\n\n      if (notifyAtRest && listener.onSpringAtRest) {\n        listener.onSpringAtRest(this)\n      }\n    })\n  }\n\n  /**\n   * Check if the SpringSystem should advance. Springs are advanced\n   * a final frame after they reach equilibrium to ensure that the\n   * currentValue is exactly the requested endValue regardless of the\n   * displacement threshold.\n   * @public\n   */\n  systemShouldAdvance() {\n    return !this.isAtRest() || !this.wasAtRest()\n  }\n\n  wasAtRest() {\n    return this._wasAtRest\n  }\n\n  /**\n   * Check if the Spring is atRest meaning that it's currentValue and\n   * endValue are the same and that it has no velocity. The previously\n   * described thresholds for speed and displacement define the bounds\n   * of this equivalence check. If the Spring has 0 tension, then it will\n   * be considered at rest whenever its absolute velocity drops below the\n   * restSpeedThreshold.\n   * @public\n   */\n  isAtRest() {\n    const isAtRest =\n      Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&\n      (this.getDisplacementDistanceForState(this._currentState) <=\n        this._displacementFromRestThreshold ||\n        this._springConfig.tension === 0)\n    return isAtRest\n  }\n\n  _interpolate(alpha) {\n    this._currentState.position =\n      this._currentState.position * alpha +\n      this._previousState.position * (1 - alpha)\n    this._currentState.velocity =\n      this._currentState.velocity * alpha +\n      this._previousState.velocity * (1 - alpha)\n  }\n\n  addListener(newListener) {\n    this.listeners.push(newListener)\n    return this\n  }\n\n  addOneTimeListener(newListener) {\n    const oneTimeFunc = func => (...args) => {\n      func(...args)\n      this.removeListener(newListener)\n    }\n    Object.keys(newListener).forEach(key => {\n      newListener[key] = oneTimeFunc(newListener[key])\n    })\n    this.listeners.push(newListener)\n    return this\n  }\n\n  removeListener(listenerToRemove) {\n    removeFirst(this.listeners, listenerToRemove)\n    return this\n  }\n}\n\nexport default Spring\n","//\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport { AnimationLooper } from './Loopers'\nimport Spring from './Spring'\nimport { removeFirst } from './util'\n\n/**\n * A set of Springs that all run on the same physics\n * timing loop. To get started with a Rebound animation, first\n * create a new SpringSystem and then add springs to it.\n * @public\n */\nclass SpringSystem {\n  constructor(looper) {\n    this.looper = looper || new AnimationLooper()\n    this.looper.springSystem = this\n\n    this.listeners = []\n    this._activeSprings = []\n    this._idleSpringIndices = []\n    this._isIdle = true\n    this._lastTimeMillis = -1\n    this._springRegistry = {}\n  }\n\n  /**\n   * Add a new spring to this SpringSystem. This Spring will now be solved for\n   * during the physics iteration loop. By default the spring will use the\n   * default Origami spring config with 40 tension and 7 friction, but you can\n   * also provide your own values here.\n   * @public\n   */\n  createSpring(tension, friction) {\n    return this.createSpringWithConfig({ tension, friction })\n  }\n  /**\n   * Add a spring with the provided SpringConfig.\n   * @public\n   */\n  createSpringWithConfig(springConfig) {\n    const spring = new Spring(this)\n    this.registerSpring(spring)\n    spring.setSpringConfig(springConfig)\n    return spring\n  }\n\n  /**\n   * Check if a SpringSystem is idle or active. If all of the Springs in the\n   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,\n   * then this method will return true.\n   * @public\n   */\n  getIsIdle() {\n    return this._isIdle\n  }\n\n  /**\n   * Manually add a spring to this system. This is called automatically\n   * if a Spring is created with SpringSystem#createSpring.\n   *\n   * This method sets the spring up in the registry so that it can be solved\n   * in the solver loop.\n   * @public\n   */\n  registerSpring(spring) {\n    this._springRegistry[spring.getId()] = spring\n  }\n\n  /**\n   * Deregister a spring with this SpringSystem. The SpringSystem will\n   * no longer consider this Spring during its integration loop once\n   * this is called. This is normally done automatically for you when\n   * you call Spring#destroy.\n   * @public\n   */\n  deregisterSpring(spring) {\n    removeFirst(this._activeSprings, spring)\n    delete this._springRegistry[spring.getId()]\n  }\n\n  advance(time, deltaTime) {\n    while (this._idleSpringIndices.length > 0) {\n      this._idleSpringIndices.pop()\n    }\n    this._activeSprings.filter(Boolean).forEach(spring => {\n      if (spring.systemShouldAdvance()) {\n        spring.advance(time / 1000.0, deltaTime / 1000.0)\n      } else {\n        this._idleSpringIndices.push(this._activeSprings.indexOf(spring))\n      }\n    })\n\n    while (this._idleSpringIndices.length > 0) {\n      const idx = this._idleSpringIndices.pop()\n      idx >= 0 && this._activeSprings.splice(idx, 1)\n    }\n  }\n\n  /**\n   * This is the main solver loop called to move the simulation\n   * forward through time. Before each pass in the solver loop\n   * onBeforeIntegrate is called on an any listeners that have\n   * registered themeselves with the SpringSystem. This gives you\n   * an opportunity to apply any constraints or adjustments to\n   * the springs that should be enforced before each iteration\n   * loop. Next the advance method is called to move each Spring in\n   * the systemShouldAdvance forward to the current time. After the\n   * integration step runs in advance, onAfterIntegrate is called\n   * on any listeners that have registered themselves with the\n   * SpringSystem. This gives you an opportunity to run any post\n   * integration constraints or adjustments on the Springs in the\n   * SpringSystem.\n   * @public\n   */\n  loop(currentTimeMillis) {\n    let listener\n    if (this._lastTimeMillis === -1) {\n      this._lastTimeMillis = currentTimeMillis - 1\n    }\n    const ellapsedMillis = currentTimeMillis - this._lastTimeMillis\n    this._lastTimeMillis = currentTimeMillis\n\n    let i = 0\n    const len = this.listeners.length\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i]\n      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this)\n    }\n\n    this.advance(currentTimeMillis, ellapsedMillis)\n    if (this._activeSprings.length === 0) {\n      this._isIdle = true\n      this._lastTimeMillis = -1\n    }\n\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i]\n      listener.onAfterIntegrate && listener.onAfterIntegrate(this)\n    }\n\n    if (!this._isIdle) {\n      this.looper.run()\n    }\n  }\n\n  /**\n   * Used to notify the SpringSystem that a Spring has become displaced.\n   * The system responds by starting its solver loop up if it is currently idle.\n   */\n  activateSpring(springId) {\n    const spring = this._springRegistry[springId]\n    if (this._activeSprings.indexOf(spring) === -1) {\n      this._activeSprings.push(spring)\n    }\n    if (this.getIsIdle()) {\n      this._isIdle = false\n      this.looper.run()\n    }\n  }\n}\n\nexport default SpringSystem\n","import { SpringSystem } from '../../../forked-rebound'\nimport { StaggerConfigValue } from '../../../types'\nimport { FlipData, FlipDataArray } from '../types'\nimport {\n  SpringSystemInterface,\n  AddListenerArgs\n} from '../../../forked-rebound/types'\n\n// this should get created only 1x\nconst springSystem: SpringSystemInterface = new SpringSystem()\n\nexport const createSuspendedSpring = (flipData: FlipData) => {\n  const {\n    springConfig: { stiffness, damping, overshootClamping },\n    getOnUpdateFunc,\n    onAnimationEnd,\n    onSpringActivate\n  } = flipData\n\n  const spring = springSystem.createSpring(stiffness!, damping!)\n  spring.setOvershootClampingEnabled(!!overshootClamping)\n  const onSpringAtRest = () => {\n    // prevent SpringSystem from caching unused springs\n    spring.destroy()\n    onAnimationEnd()\n  }\n\n  const springConfig: AddListenerArgs = {\n    onSpringActivate,\n    onSpringAtRest,\n    onSpringUpdate: getOnUpdateFunc({\n      spring,\n      onAnimationEnd\n    })\n  }\n\n  spring.addListener(springConfig)\n  return spring\n}\n\nexport const createSpring = (flipped: FlipData) => {\n  const spring = createSuspendedSpring(flipped)\n  spring.setEndValue(1)\n  return spring\n}\n\nexport const normalizeSpeed = (speedConfig: number | undefined) => {\n  if (typeof speedConfig !== 'number') return 1.1\n  return 1 + Math.min(Math.max(speedConfig * 5, 0), 5)\n}\n\nexport const createStaggeredSprings = (\n  flippedArray: FlipDataArray,\n  staggerConfig: StaggerConfigValue = {}\n) => {\n  if (!flippedArray || !flippedArray.length) {\n    return\n  }\n\n  if (staggerConfig.reverse) {\n    flippedArray.reverse()\n  }\n\n  const normalizedSpeed = normalizeSpeed(staggerConfig.speed)\n\n  const nextThreshold = 1 / Math.max(Math.min(flippedArray.length, 100), 10)\n\n  const setEndValueFuncs = flippedArray\n    .map((flipped, i) => {\n      const cachedGetOnUpdate = flipped.getOnUpdateFunc\n\n      // modify the update function to adjust\n      // the end value of the trailing Flipped component\n      flipped.getOnUpdateFunc = args => {\n        const onUpdate = cachedGetOnUpdate(args)\n        return spring => {\n          let currentValue = spring.getCurrentValue()\n          // make sure trailing animations complete\n          currentValue =\n            currentValue < 0.01 ? 0 : currentValue > 0.99 ? 1 : currentValue\n\n          const updateTrailingAnimation = currentValue >= nextThreshold\n          if (updateTrailingAnimation) {\n            if (setEndValueFuncs[i + 1]) {\n              setEndValueFuncs[i + 1]!(\n                Math.max(Math.min(currentValue * normalizedSpeed, 1), 0)\n              )\n            }\n          }\n          // now call the actual update function\n          onUpdate(spring)\n        }\n      }\n      return flipped\n    })\n    .map(flipped => {\n      const spring = createSuspendedSpring(flipped)\n      if (!spring) {\n        return\n      }\n      return spring.setEndValue.bind(spring)\n    })\n    .filter(Boolean)\n\n  if (setEndValueFuncs[0]) {\n    setEndValueFuncs[0]!(1)\n  }\n}\n","import * as Rematrix from 'rematrix'\nimport { getSpringConfig } from '../../springSettings'\nimport {\n  toArray,\n  isFunction,\n  isNumber,\n  getDuplicateValsAsStrings,\n  assign,\n  tweenProp\n} from '../../utilities'\nimport * as constants from '../../constants'\nimport {\n  GetOnUpdateFunc,\n  OnUpdate,\n  Matrix,\n  InvertedChildren,\n  AnimateFlippedElementsArgs,\n  AnimatedVals,\n  FlipDataArray,\n  FlipData,\n  InitializeFlip\n} from './types'\nimport { BoundingClientRect } from '../getFlippedElementPositions/types'\nimport { FlippedIds } from '../types'\nimport { createSpring, createStaggeredSprings } from './spring'\nimport { IndexableObject } from '../../utilities/types'\nimport { FlipId } from '../../types'\n\n// 3d transforms were causing weird issues in chrome,\n// especially when opacity was also being tweened,\n// so convert to a 2d matrix\nexport const convertMatrix3dArrayTo2dArray = (matrix: Matrix): Matrix =>\n  [0, 1, 4, 5, 12, 13].map(index => matrix[index])\n\nexport const convertMatrix2dArrayToString = (matrix: Matrix) =>\n  `matrix(${matrix.join(', ')})`\n\nexport const invertTransformsForChildren = ({\n  invertedChildren,\n  matrix,\n  body\n}: {\n  matrix: Matrix\n  body: HTMLBodyElement\n  invertedChildren: InvertedChildren\n}) => {\n  invertedChildren.forEach(([child, childFlipConfig]) => {\n    if (!body.contains(child)) {\n      return\n    }\n    const scaleX = matrix[0]\n    const scaleY = matrix[3]\n    const translateX = matrix[4]\n    const translateY = matrix[5]\n\n    const inverseVals = { translateX: 0, translateY: 0, scaleX: 1, scaleY: 1 }\n    let transformString = ''\n    if (childFlipConfig.translate) {\n      inverseVals.translateX = -translateX / scaleX\n      inverseVals.translateY = -translateY / scaleY\n      transformString += `translate(${inverseVals.translateX}px, ${inverseVals.translateY}px)`\n    }\n    if (childFlipConfig.scale) {\n      inverseVals.scaleX = 1 / scaleX\n      inverseVals.scaleY = 1 / scaleY\n      transformString += ` scale(${inverseVals.scaleX}, ${inverseVals.scaleY})`\n    }\n    child.style.transform = transformString\n  })\n}\n\nexport const createApplyStylesFunc = ({\n  element,\n  invertedChildren,\n  body\n}: {\n  element: HTMLElement\n  invertedChildren: InvertedChildren\n  body: HTMLBodyElement\n}) => ({\n  matrix,\n  opacity,\n  forceMinVals\n}: {\n  matrix: Matrix\n  opacity?: number\n  forceMinVals?: boolean\n}) => {\n  if (isNumber(opacity)) {\n    element.style.opacity = opacity + ''\n  }\n\n  if (forceMinVals) {\n    element.style.minHeight = '1px'\n    element.style.minWidth = '1px'\n  }\n\n  if (!matrix) {\n    return\n  }\n\n  const stringTransform = convertMatrix2dArrayToString(matrix)\n\n  // always apply transform, even if identity,\n  // because identity might be the starting state in a FLIP\n  // transition, if the element's position is controlled by transforms\n  element.style.transform = stringTransform\n\n  if (invertedChildren) {\n    invertTransformsForChildren({\n      invertedChildren,\n      matrix,\n      body\n    })\n  }\n}\n\nexport const rectInViewport = ({\n  top,\n  bottom,\n  left,\n  right\n}: BoundingClientRect) => {\n  return (\n    top < window.innerHeight &&\n    bottom > 0 &&\n    left < window.innerWidth &&\n    right > 0\n  )\n}\n\nconst getInvertedChildren = (element: HTMLElement, id: string) =>\n  toArray(\n    element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}=\"${id}\"]`)\n  )\n\nfunction extractFlipConfig(element: HTMLElement) {\n  const flipConfig = JSON.parse(element.dataset.flipConfig || '{}')\n  return flipConfig\n}\n\nexport default ({\n  flippedIds,\n  flipCallbacks,\n  inProgressAnimations,\n  flippedElementPositionsBeforeUpdate,\n  flippedElementPositionsAfterUpdate,\n  applyTransformOrigin,\n  spring,\n  getElement,\n  debug,\n  staggerConfig = {},\n  decisionData = {},\n  onComplete,\n  containerEl\n}: AnimateFlippedElementsArgs) => {\n  // the stuff below is used so we can return a promise that resolves when all FLIP animations have\n  // completed\n  let closureResolve: (flipIds: FlippedIds) => void\n\n  const flipCompletedPromise: Promise<FlippedIds> = new Promise(resolve => {\n    closureResolve = resolve\n  })\n  // hook for users of lib to attach logic when all flip animations have completed\n  if (onComplete) {\n    flipCompletedPromise.then(() => onComplete(containerEl, decisionData))\n  }\n  if (!flippedIds.length) {\n    return () => {\n      closureResolve!([])\n      return flipCompletedPromise\n    }\n  }\n\n  const completedAnimationIds: FlippedIds = []\n\n  const firstElement: HTMLElement = getElement(flippedIds[0])\n  // special handling for iframes\n  const body = firstElement\n    ? firstElement.ownerDocument!.querySelector('body')!\n    : document.querySelector('body')!\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (debug) {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[react-flip-toolkit]\\nThe \"debug\" prop is set to true. All FLIP animations will return at the beginning of the transition.'\n      )\n    }\n  }\n\n  const duplicateFlipIds = getDuplicateValsAsStrings(flippedIds)\n  if (process.env.NODE_ENV !== 'production') {\n    if (duplicateFlipIds.length) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `[react-flip-toolkit]\\nThere are currently multiple elements with the same flipId on the page.\\nThe animation will only work if each Flipped component has a unique flipId.\\nDuplicate flipId${\n          duplicateFlipIds.length > 1 ? 's' : ''\n        }: ${duplicateFlipIds.join('\\n')}`\n      )\n    }\n  }\n\n  const flipDataArray: FlipDataArray = flippedIds\n\n    // take all the measurements we need\n    // and return an object with animation functions + necessary data\n    .map(id => {\n      const prevRect = flippedElementPositionsBeforeUpdate[id].rect\n      const currentRect = flippedElementPositionsAfterUpdate[id].rect\n      const prevOpacity = flippedElementPositionsBeforeUpdate[id].opacity\n      const currentOpacity = flippedElementPositionsAfterUpdate[id].opacity\n      const needsForcedMinVals = currentRect.width < 1 || currentRect.height < 1\n      const element = flippedElementPositionsAfterUpdate[id].element\n\n      // don't animate elements outside of the user's viewport\n      if (!rectInViewport(prevRect) && !rectInViewport(currentRect)) {\n        return false\n      }\n\n      // this might happen if we are rapidly adding & removing elements(?)\n      if (!element) {\n        return false\n      }\n\n      const flipConfig = extractFlipConfig(element)\n\n      const springConfig = getSpringConfig({\n        flipperSpring: spring,\n        flippedSpring: flipConfig.spring\n      })\n\n      const stagger =\n        flipConfig.stagger === true ? 'default' : flipConfig.stagger\n\n      const toReturn = {\n        element,\n        id,\n        stagger,\n        springConfig\n      }\n\n      if (flipCallbacks[id] && flipCallbacks[id].shouldFlip) {\n        const elementShouldFlip = flipCallbacks[id].shouldFlip!(\n          decisionData.previous,\n          decisionData.current\n        )\n        if (!elementShouldFlip) {\n          return false\n        }\n      }\n\n      // don't animate elements that didn't visibly change\n      // but possibly animate their children\n\n      const translateXDifference = Math.abs(prevRect.left - currentRect.left)\n      const translateYDifference = Math.abs(prevRect.top - currentRect.top)\n\n      const translateDifference = translateXDifference + translateYDifference\n\n      const scaleXDifference = Math.abs(prevRect.width - currentRect.width)\n      const scaleYDifference = Math.abs(prevRect.height - currentRect.height)\n\n      const scaleDifference = scaleXDifference + scaleYDifference\n\n      const opacityDifference = Math.abs(currentOpacity - prevOpacity)\n      const differenceTooSmall =\n        translateDifference < 0.5 &&\n        scaleDifference < 0.5 &&\n        opacityDifference < 0.01\n\n      const hiddenDueToDimensions =\n        (prevRect.height === 0 && currentRect.height === 0) ||\n        (prevRect.width === 0 && currentRect.width === 0)\n      if (hiddenDueToDimensions || differenceTooSmall) {\n        return false\n      }\n\n      const currentTransform = Rematrix.parse(\n        flippedElementPositionsAfterUpdate[id].transform\n      )\n\n      const toVals: AnimatedVals = { matrix: currentTransform }\n\n      const fromVals: AnimatedVals = { matrix: [] }\n      const transformsArray = [currentTransform]\n\n      // we're only going to animate the values that the child wants animated\n      if (flipConfig.translate) {\n        transformsArray.push(\n          Rematrix.translateX(prevRect.left - currentRect.left)\n        )\n        transformsArray.push(\n          Rematrix.translateY(prevRect.top - currentRect.top)\n        )\n      }\n      // going any smaller than 1px breaks transitions in Chrome\n      if (flipConfig.scale) {\n        transformsArray.push(\n          Rematrix.scaleX(\n            Math.max(prevRect.width, 1) / Math.max(currentRect.width, 1)\n          )\n        )\n        transformsArray.push(\n          Rematrix.scaleY(\n            Math.max(prevRect.height, 1) / Math.max(currentRect.height, 1)\n          )\n        )\n      }\n\n      if (flipConfig.opacity) {\n        fromVals.opacity = prevOpacity\n        toVals.opacity = currentOpacity\n      }\n\n      let invertedChildren: InvertedChildren = []\n\n      if (\n        !flipCallbacks[id] ||\n        !flipCallbacks[id].shouldInvert ||\n        flipCallbacks[id].shouldInvert!(\n          decisionData.previous,\n          decisionData.current\n        )\n      ) {\n        const invertedChildElements = getInvertedChildren(element, id)\n        invertedChildren = invertedChildElements.map(c => [\n          c,\n          extractFlipConfig(c)\n        ]) as InvertedChildren\n      }\n\n      fromVals.matrix = convertMatrix3dArrayTo2dArray(\n        transformsArray.reduce(Rematrix.multiply)\n      )\n\n      toVals.matrix = convertMatrix3dArrayTo2dArray(toVals.matrix)\n\n      const applyStyles = createApplyStylesFunc({\n        element,\n        invertedChildren,\n        body\n      })\n\n      let onComplete: () => void\n      if (flipCallbacks[id] && flipCallbacks[id].onComplete) {\n        // must cache or else this could cause an error\n        const cachedOnComplete = flipCallbacks[id].onComplete\n        onComplete = () => cachedOnComplete!(element, decisionData)\n      }\n\n      // this should be called when animation ends naturally\n      // but also when it is interrupted\n      // when it is called, the animation has already been cancelled\n      const onAnimationEnd = (isCancellation: boolean) => {\n        delete inProgressAnimations[id]\n        if (isFunction(onComplete)) {\n          onComplete()\n        }\n        // remove identity transform -- this should have no effect on layout\n        element.style.transform = ''\n        invertedChildren.forEach(([element]) => {\n          element.style.transform = ''\n        })\n        if (needsForcedMinVals && element) {\n          element.style.minHeight = ''\n          element.style.minWidth = ''\n        }\n        if (isCancellation) return\n\n        completedAnimationIds.push(id)\n\n        if (completedAnimationIds.length >= flipDataArray.length) {\n          // we can theoretically call multiple times since a promise only resolves 1x\n          // but that shouldnt happen\n          closureResolve(completedAnimationIds)\n        }\n      }\n\n      const animateOpacity =\n        isNumber(fromVals.opacity) &&\n        isNumber(toVals.opacity) &&\n        fromVals.opacity !== toVals.opacity\n\n      let onStartCalled = false\n\n      const getOnUpdateFunc: GetOnUpdateFunc = ({ spring, onAnimationEnd }) => {\n        inProgressAnimations[id] = {\n          destroy: spring.destroy.bind(spring),\n          onAnimationEnd\n        }\n        const onUpdate: OnUpdate = spring => {\n          if (flipCallbacks[id] && flipCallbacks[id].onSpringUpdate) {\n            flipCallbacks[id].onSpringUpdate!(spring.getCurrentValue())\n          }\n          // trigger the user provided onStart function\n          if (!onStartCalled) {\n            onStartCalled = true\n            if (flipCallbacks[id] && flipCallbacks[id].onStart) {\n              flipCallbacks[id].onStart!(element, decisionData)\n            }\n          }\n\n          const currentValue = spring.getCurrentValue()\n          if (!body.contains(element)) {\n            spring.destroy()\n            return\n          }\n\n          const vals: AnimatedVals = { matrix: [] }\n\n          vals.matrix = fromVals.matrix.map((fromVal, index) =>\n            tweenProp(fromVal, toVals.matrix[index], currentValue)\n          )\n\n          if (animateOpacity) {\n            vals.opacity = tweenProp(\n              fromVals.opacity!,\n              toVals.opacity!,\n              currentValue\n            )\n          }\n          applyStyles(vals)\n        }\n        return onUpdate\n      }\n\n      const initializeFlip: InitializeFlip = () => {\n        // before animating, immediately apply FLIP styles to prevent flicker\n        applyStyles({\n          matrix: fromVals.matrix,\n          opacity: animateOpacity ? fromVals.opacity : undefined,\n          forceMinVals: needsForcedMinVals\n        })\n\n        if (flipCallbacks[id] && flipCallbacks[id].onStartImmediate) {\n          flipCallbacks[id].onStartImmediate!(element, decisionData)\n        }\n        // and batch any other style updates if necessary\n        if (flipConfig.transformOrigin) {\n          element.style.transformOrigin = flipConfig.transformOrigin\n        } else if (applyTransformOrigin) {\n          element.style.transformOrigin = '0 0'\n        }\n\n        invertedChildren.forEach(([child, childFlipConfig]) => {\n          if (childFlipConfig.transformOrigin) {\n            child.style.transformOrigin = childFlipConfig.transformOrigin\n          } else if (applyTransformOrigin) {\n            child.style.transformOrigin = '0 0'\n          }\n        })\n      }\n\n      return assign({}, toReturn, {\n        stagger,\n        springConfig,\n        getOnUpdateFunc,\n        initializeFlip,\n        onAnimationEnd,\n        delayUntil: flipConfig.delayUntil\n      }) as FlipData\n    })\n    // filter out data for all non-animated elements first\n    .filter(Boolean) as FlipDataArray\n\n  flipDataArray.forEach(({ initializeFlip }) => initializeFlip())\n\n  if (debug) {\n    return () => {}\n  }\n\n  const elementIsFlipped = (flipId: FlipId) =>\n    flipDataArray.filter(f => f.id === flipId).length\n\n  const delayedFlip = flipDataArray.filter(\n    f => f.delayUntil && elementIsFlipped(f.delayUntil)\n  )\n\n  // key: flipId value: flip to delay until key is called\n  const delayUntilSprings = {} as IndexableObject\n  // key: flipId value: stagger to delay until key is called\n  const delayUntilStaggers = {} as IndexableObject\n  // key: stagger value: true\n  const delayedStaggerKeys = {} as IndexableObject\n\n  delayedFlip.forEach(flip => {\n    if (flip.stagger) {\n      delayedStaggerKeys[flip.stagger] = true\n      if (delayUntilStaggers[flip.delayUntil!])\n        delayUntilStaggers[flip.delayUntil!].push(flip.stagger)\n      else delayUntilStaggers[flip.delayUntil!] = [flip.stagger]\n    } else {\n      if (delayUntilSprings[flip.delayUntil!])\n        delayUntilSprings[flip.delayUntil!].push(flip)\n      else delayUntilSprings[flip.delayUntil!] = [flip]\n    }\n  })\n\n  const staggerDict = flipDataArray\n    .filter(flipData => flipData.stagger)\n    .reduce((acc, curr) => {\n      if (acc[curr.stagger]) {\n        acc[curr.stagger].push(curr)\n      } else {\n        acc[curr.stagger] = [curr]\n      }\n      return acc\n    }, {} as IndexableObject)\n\n  const immediateFlip = flipDataArray.filter(f => delayedFlip.indexOf(f) === -1)\n\n  immediateFlip.forEach(flipData => {\n    flipData.onSpringActivate = () => {\n      if (delayUntilSprings[flipData.id]) {\n        delayUntilSprings[flipData.id].forEach(createSpring)\n      }\n      if (delayUntilStaggers[flipData.id]) {\n        const uniqueStaggerKeys = Object.keys(\n          delayUntilStaggers[flipData.id].reduce(\n            (acc: IndexableObject, curr: string) =>\n              assign(acc, { [curr]: true }),\n            {}\n          )\n        )\n        uniqueStaggerKeys.forEach((staggerKey: string) => {\n          createStaggeredSprings(\n            staggerDict[staggerKey],\n            staggerConfig[staggerKey]\n          )\n        })\n      }\n    }\n  })\n\n  return () => {\n    // if there are no active FLIP animations, immediately resolve the\n    // returned promise\n    if (!flipDataArray.length) {\n      closureResolve([])\n    }\n    // animate non-staggered elements\n    immediateFlip\n      .filter(flipData => {\n        return !flipData.stagger\n      })\n      .forEach(createSpring)\n\n    // animate staggered elements\n    Object.keys(staggerDict).forEach(staggerKey => {\n      if (delayedStaggerKeys[staggerKey]) return\n      createStaggeredSprings(staggerDict[staggerKey], staggerConfig[staggerKey])\n    })\n    return flipCompletedPromise\n  }\n}\n","import { toArray, assign } from '../../utilities'\nimport * as constants from '../../constants'\nimport { BoundingClientRect } from './types'\n\nexport const addTupleToObject = <T>(\n  acc: Record<string, T>,\n  curr: [string, T]\n): Record<string, T> => assign(acc, { [curr[0]]: curr[1] })\n\nexport const getAllElements = (\n  element?: HTMLElement,\n  portalKey?: string\n): HTMLElement[] => {\n  if (portalKey) {\n    return toArray(\n      document.querySelectorAll(`[${constants.DATA_PORTAL_KEY}=\"${portalKey}\"]`)\n    )\n  } else {\n    return toArray(element!.querySelectorAll(`[${constants.DATA_FLIP_ID}]`))\n  }\n}\nexport const getRects = (\n  flippedElements: HTMLElement[]\n): [HTMLElement, BoundingClientRect][] => {\n  return flippedElements.map((child: HTMLElement): [\n    HTMLElement,\n    BoundingClientRect\n  ] => [child, child.getBoundingClientRect()])\n}\n","import animateUnflippedElements from './animateUnflippedElements'\nimport animateFlippedElements from './animateFlippedElements'\nimport getFlippedElementPositionsAfterUpdate from './getFlippedElementPositions/getFlippedElementPositionsAfterUpdate'\nimport * as constants from '../constants'\nimport { assign, toArray } from '../utilities'\nimport {\n  GetElement,\n  BaseFlipArgs,\n  OnFlipKeyUpdateArgs,\n  FlippedIds\n} from './types'\nimport { AnimateUnflippedElementsArgs } from './animateUnflippedElements/types'\nimport {\n  AnimateFlippedElementsArgs,\n  ScopedSelector\n} from './animateFlippedElements/types'\n\nconst createPortalScopedSelector = (portalKey: string) => (\n  selector: string\n) => {\n  return toArray(\n    document.querySelectorAll(\n      `[${constants.DATA_PORTAL_KEY}=\"${portalKey}\"]${selector}`\n    )\n  )\n}\nconst createFlipperScopedSelector = (containerEl: HTMLElement) => {\n  const tempFlipperId = Math.random().toFixed(5)\n  containerEl.dataset.flipperId = tempFlipperId\n\n  return (selector: string) => {\n    return toArray(\n      containerEl.querySelectorAll(\n        `[data-flipper-id=\"${tempFlipperId}\"] ${selector}`\n      )\n    )\n  }\n}\nconst createScopedSelector = ({\n  containerEl,\n  portalKey\n}: {\n  containerEl?: HTMLElement\n  portalKey?: string\n}): ScopedSelector => {\n  if (portalKey) {\n    return createPortalScopedSelector(portalKey)\n  } else if (containerEl) {\n    return createFlipperScopedSelector(containerEl)\n  } else {\n    return () => []\n  }\n}\n\nconst createGetElementFunc = (scopedSelector: ScopedSelector): GetElement => {\n  return (id: string) => {\n    return scopedSelector(`[${constants.DATA_FLIP_ID}=\"${id}\"]`)[0]\n  }\n}\n\nconst onFlipKeyUpdate = ({\n  cachedOrderedFlipIds = [],\n  inProgressAnimations = {},\n  flippedElementPositionsBeforeUpdate = {},\n  flipCallbacks = {},\n  containerEl,\n  applyTransformOrigin,\n  spring,\n  debug,\n  portalKey,\n  staggerConfig = {},\n  decisionData = {},\n  handleEnterUpdateDelete,\n  onComplete,\n  onStart\n}: OnFlipKeyUpdateArgs) => {\n  const flippedElementPositionsAfterUpdate = getFlippedElementPositionsAfterUpdate(\n    {\n      element: containerEl,\n      portalKey\n    }\n  )\n\n  const scopedSelector = createScopedSelector({\n    containerEl,\n    portalKey\n  })\n  const getElement = createGetElementFunc(scopedSelector)\n\n  const isFlipped = (id: string) =>\n    flippedElementPositionsBeforeUpdate[id] &&\n    flippedElementPositionsAfterUpdate[id]\n\n  const unflippedIds = Object.keys(flippedElementPositionsBeforeUpdate)\n    .concat(Object.keys(flippedElementPositionsAfterUpdate))\n    .filter(id => !isFlipped(id))\n\n  const baseArgs: BaseFlipArgs = {\n    flipCallbacks,\n    getElement,\n    flippedElementPositionsBeforeUpdate,\n    flippedElementPositionsAfterUpdate,\n    inProgressAnimations,\n    decisionData\n  }\n\n  const animateUnFlippedElementsArgs = assign({}, baseArgs, {\n    unflippedIds\n  }) as AnimateUnflippedElementsArgs\n\n  const {\n    hideEnteringElements,\n    animateEnteringElements,\n    animateExitingElements\n  } = animateUnflippedElements(animateUnFlippedElementsArgs)\n\n  const flippedIds: FlippedIds = cachedOrderedFlipIds.filter(isFlipped)\n  // @ts-ignore\n  const animateFlippedElementsArgs: AnimateFlippedElementsArgs = assign(\n    {},\n    baseArgs,\n    {\n      containerEl,\n      flippedIds,\n      applyTransformOrigin,\n      spring,\n      debug,\n      staggerConfig,\n      scopedSelector,\n      onComplete\n    }\n  )\n  if (onStart) onStart(containerEl, decisionData)\n\n  // the function handles putting flipped elements back in their original positions\n  // and returns another function to actually call the flip animation\n  const flip = animateFlippedElements(animateFlippedElementsArgs)\n\n  if (handleEnterUpdateDelete) {\n    handleEnterUpdateDelete({\n      hideEnteringElements,\n      animateEnteringElements,\n      animateExitingElements,\n      animateFlippedElements: flip\n    })\n  } else {\n    hideEnteringElements()\n    animateExitingElements().then(animateEnteringElements)\n    flip()\n  }\n}\n\nexport default onFlipKeyUpdate\n","import { addTupleToObject, getRects, getAllElements } from '../utilities'\nimport {\n  FlippedElementPositionsAfterUpdate,\n  FlippedElementPositionDatumAfterUpdate\n} from './types'\n\nconst getFlippedElementPositionsAfterUpdate = ({\n  element,\n  portalKey\n}: {\n  element: HTMLElement\n  portalKey?: string\n}): FlippedElementPositionsAfterUpdate => {\n  const positionArray = getRects(getAllElements(element, portalKey)).map(\n    ([child, childBCR]) => {\n      const computedStyle = window.getComputedStyle(child)\n      return [\n        child.dataset.flipId,\n        {\n          element: child,\n          rect: childBCR,\n          opacity: parseFloat(computedStyle.opacity!),\n          transform: computedStyle.transform\n        }\n      ]\n    }\n  ) as [string, FlippedElementPositionDatumAfterUpdate][]\n\n  return positionArray.reduce(addTupleToObject, {})\n}\n\nexport default getFlippedElementPositionsAfterUpdate\n","import { AnimateUnflippedElementsArgs, FragmentTuple } from './types'\n\nconst animateUnflippedElements = ({\n  unflippedIds,\n  flipCallbacks,\n  getElement,\n  flippedElementPositionsBeforeUpdate,\n  flippedElementPositionsAfterUpdate,\n  inProgressAnimations,\n  decisionData\n}: AnimateUnflippedElementsArgs) => {\n  const enteringElementIds = unflippedIds.filter(\n    id => flippedElementPositionsAfterUpdate[id]\n  )\n  const animatedEnteringElementIds = enteringElementIds.filter(\n    id => flipCallbacks[id] && flipCallbacks[id].onAppear\n  )\n\n  const animatedExitingElementIds = unflippedIds.filter(\n    id =>\n      flippedElementPositionsBeforeUpdate[id] &&\n      flipCallbacks[id] &&\n      flipCallbacks[id].onExit\n  )\n\n  const hideEnteringElements = () => {\n    animatedEnteringElementIds.forEach(id => {\n      const element = getElement(id)\n      if (element) {\n        element.style.opacity = '0'\n      }\n    })\n  }\n\n  const animateEnteringElements = () => {\n    animatedEnteringElementIds.forEach((id, i) => {\n      const element = getElement(id)\n      if (element) {\n        flipCallbacks[id].onAppear!(element, i, decisionData)\n      }\n    })\n  }\n\n  let closureResolve: () => void\n\n  const promiseToReturn: Promise<void> = new Promise(resolve => {\n    closureResolve = resolve\n  })\n\n  const fragmentTuples: FragmentTuple[] = []\n  let exitingElementCount = 0\n\n  const onExitCallbacks = animatedExitingElementIds.map((id, i) => {\n    const {\n      domDataForExitAnimations: {\n        element,\n        parent,\n        childPosition: { top, left, width, height }\n      }\n    } = flippedElementPositionsBeforeUpdate[id]\n    // insert back into dom\n    if (getComputedStyle(parent).position === 'static') {\n      parent.style.position = 'relative'\n    }\n    element.style.transform = 'matrix(1, 0, 0, 1, 0, 0)'\n    element.style.position = 'absolute'\n    element.style.top = top + 'px'\n    element.style.left = left + 'px'\n    // taken out of the dom flow, the element might have lost these dimensions\n    element.style.height = height + 'px'\n    element.style.width = width + 'px'\n    let fragmentTuple: FragmentTuple | undefined = fragmentTuples.filter(\n      t => t[0] === parent\n    )[0]\n    if (!fragmentTuple) {\n      fragmentTuple = [parent, document.createDocumentFragment()]\n      fragmentTuples.push(fragmentTuple)\n    }\n    fragmentTuple[1].appendChild(element)\n\n    exitingElementCount += 1\n\n    const stop = () => {\n      try {\n        parent.removeChild(element)\n      } catch (DOMException) {\n        // the element is already gone\n      } finally {\n        exitingElementCount -= 1\n        if (exitingElementCount === 0) {\n          closureResolve()\n        }\n      }\n    }\n    // @ts-ignore\n    inProgressAnimations[id] = { stop }\n    return () => flipCallbacks[id].onExit!(element, i, stop, decisionData)\n  })\n\n  // now append all the fragments from the onExit callbacks\n  // (we use fragments for performance)\n  fragmentTuples.forEach(t => {\n    t[0].appendChild(t[1])\n  })\n\n  if (!onExitCallbacks.length) {\n    closureResolve!()\n  }\n\n  const animateExitingElements = () => {\n    onExitCallbacks.forEach(c => c())\n    return promiseToReturn\n  }\n\n  return {\n    hideEnteringElements,\n    animateEnteringElements,\n    animateExitingElements\n  }\n}\n\nexport default animateUnflippedElements\n","import { addTupleToObject, getAllElements, getRects } from '../utilities'\nimport * as constants from '../../../constants'\nimport { toArray, assign } from '../../../utilities'\nimport {\n  FlippedElementPositionsBeforeUpdateReturnVals,\n  FlippedElementPositionDatumBeforeUpdate,\n  GetFlippedElementPositionsBeforeUpdateArgs,\n  ParentBCRs,\n  ChildIdsToParentBCRs,\n  ChildIdsToParents\n} from './types'\nimport { InProgressAnimations } from '../../../types'\n\nexport const cancelInProgressAnimations = (\n  inProgressAnimations: InProgressAnimations,\n  animatingElements: HTMLElement[]\n) => {\n  Object.keys(inProgressAnimations).forEach(id => {\n    if (inProgressAnimations[id].destroy) {\n      inProgressAnimations[id].destroy!()\n    }\n    if (inProgressAnimations[id].onAnimationEnd) {\n      inProgressAnimations[id].onAnimationEnd!(true)\n    }\n    delete inProgressAnimations[id]\n  })\n  animatingElements.forEach(el => {\n    el.style.transform = ''\n    el.style.opacity = ''\n  })\n}\n\nconst getFlippedElementPositionsBeforeUpdate = ({\n  element,\n  flipCallbacks = {},\n  inProgressAnimations = {},\n  portalKey\n}: GetFlippedElementPositionsBeforeUpdateArgs): FlippedElementPositionsBeforeUpdateReturnVals => {\n  const flippedElements = getAllElements(element, portalKey)\n\n  const inverseFlippedElements = toArray(\n    element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}]`)\n  )\n\n  const childIdsToParentBCRs: ChildIdsToParentBCRs = {}\n  const parentBCRs: ParentBCRs = []\n  const childIdsToParents: ChildIdsToParents = {}\n  // this is for exit animations so we can re-insert exiting elements in the\n  // DOM later\n  flippedElements\n    .filter(\n      el =>\n        flipCallbacks &&\n        flipCallbacks[el.dataset.flipId!] &&\n        flipCallbacks[el.dataset.flipId!].onExit\n    )\n    .forEach(el => {\n      let parent = el.parentNode as HTMLElement\n      // this won't work for IE11\n      if (el.closest) {\n        const exitContainer = el.closest(\n          `[${constants.DATA_EXIT_CONTAINER}]`\n        ) as HTMLElement\n        if (exitContainer) {\n          parent = exitContainer\n        }\n      }\n      let bcrIndex = parentBCRs.findIndex(n => n[0] === parent)\n      if (bcrIndex === -1) {\n        parentBCRs.push([parent, parent.getBoundingClientRect()])\n        bcrIndex = parentBCRs.length - 1\n      }\n      childIdsToParentBCRs[el.dataset.flipId!] = parentBCRs[bcrIndex][1]\n      childIdsToParents[el.dataset.flipId!] = parent\n    })\n\n  const filteredFlippedElements = getRects(flippedElements)\n\n  const flippedElementPositionsTupleArray: [\n    string,\n    FlippedElementPositionDatumBeforeUpdate\n  ][] = filteredFlippedElements.map(([child, childBCR]) => {\n    const domDataForExitAnimations = {}\n\n    // only cache extra data for exit animations\n    // if the element has an onExit listener\n    if (\n      flipCallbacks &&\n      flipCallbacks[child.dataset.flipId!] &&\n      flipCallbacks[child.dataset.flipId!].onExit\n    ) {\n      const parentBCR = childIdsToParentBCRs[child.dataset.flipId!]\n\n      assign(domDataForExitAnimations, {\n        element: child,\n        parent: childIdsToParents[child.dataset.flipId!],\n        childPosition: {\n          top: childBCR.top - parentBCR.top,\n          left: childBCR.left - parentBCR.left,\n          width: childBCR.width,\n          height: childBCR.height\n        }\n      })\n    }\n\n    return [\n      child.dataset.flipId!,\n      {\n        rect: childBCR,\n        opacity: parseFloat(window.getComputedStyle(child).opacity || '1'),\n        domDataForExitAnimations\n      }\n    ]\n  }) as [string, FlippedElementPositionDatumBeforeUpdate][]\n\n  const flippedElementPositions = flippedElementPositionsTupleArray.reduce(\n    addTupleToObject,\n    {}\n  )\n\n  // do this at the very end since we want to cache positions of elements\n  // while they are mid-transition\n  cancelInProgressAnimations(\n    inProgressAnimations,\n    flippedElements.concat(inverseFlippedElements)\n  )\n\n  return {\n    flippedElementPositions,\n    cachedOrderedFlipIds: filteredFlippedElements.map(\n      ([el]) => el.dataset.flipId!\n    )\n  }\n}\n\nexport default getFlippedElementPositionsBeforeUpdate\n","import onFlipKeyUpdate from './flip'\nimport getFlippedElementPositionsBeforeUpdate from './flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate'\nimport { assign } from './utilities'\nimport {\n  StaggerConfig,\n  HandleEnterUpdateDelete,\n  InProgressAnimations,\n  FlipCallbacks,\n  OnFlipperComplete,\n  FlippedProps,\n  OnFlipperStart\n} from './types'\nimport { SpringOption } from './springSettings/types'\nimport { FlippedElementPositionsBeforeUpdate } from './flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/types'\nimport { FlippedIds } from './flip/types'\n\ninterface Options {\n  element: HTMLElement\n  staggerConfig?: StaggerConfig\n  spring?: SpringOption\n  applyTransformOrigin?: boolean\n  handleEnterUpdateDelete?: HandleEnterUpdateDelete\n  debug?: boolean\n  onStart?: OnFlipperStart  \n  onComplete?: OnFlipperComplete  \n}\n\nclass Flipper {\n  private element!: HTMLElement\n  private staggerConfig!: StaggerConfig\n  private applyTransformOrigin = true\n  private handleEnterUpdateDelete!: HandleEnterUpdateDelete\n  private debug?: boolean\n  private spring!: SpringOption\n  private inProgressAnimations: InProgressAnimations\n  private flipCallbacks: FlipCallbacks\n  private snapshot!: {\n    flippedElementPositions: FlippedElementPositionsBeforeUpdate\n    cachedOrderedFlipIds: FlippedIds\n  }\n  private onComplete?: OnFlipperComplete\n  private onStart?: OnFlipperStart\n\n  constructor(options: Options) {\n    assign(this, options)\n\n    this.inProgressAnimations = {}\n    this.flipCallbacks = {}\n\n    this.recordBeforeUpdate = this.recordBeforeUpdate.bind(this)\n    this.update = this.update.bind(this)\n    this.addFlipped = this.addFlipped.bind(this)\n    this.addInverted = this.addInverted.bind(this)\n  }\n\n  recordBeforeUpdate() {\n    this.snapshot = getFlippedElementPositionsBeforeUpdate({\n      element: this.element,\n      flipCallbacks: this.flipCallbacks,\n      inProgressAnimations: this.inProgressAnimations\n    })\n  }\n  update(prevDecisionData: any, currentDecisionData: any) {\n    if (this.snapshot) {\n      onFlipKeyUpdate({\n        flippedElementPositionsBeforeUpdate: this.snapshot\n          .flippedElementPositions,\n        cachedOrderedFlipIds: this.snapshot.cachedOrderedFlipIds,\n        containerEl: this.element,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.applyTransformOrigin,\n        spring: this.spring,\n        debug: this.debug,\n        staggerConfig: this.staggerConfig,\n        handleEnterUpdateDelete: this.handleEnterUpdateDelete,\n        decisionData: {\n          previous: prevDecisionData,\n          current: currentDecisionData\n        },\n        onComplete: this.onComplete,\n        onStart: this.onStart\n      })\n      delete this.snapshot\n    }\n  }\n\n  addFlipped({\n    element,\n    flipId,\n    opacity,\n    translate,\n    scale,\n    transformOrigin,\n    spring,\n    stagger,\n    delayUntil,\n    onAppear,\n    onStart,\n    onSpringUpdate,\n    onComplete,\n    onExit,\n    shouldFlip,\n    shouldInvert\n  }: FlippedProps & { element: HTMLElement }) {\n    if (!element) {\n      throw new Error('no element provided')\n    }\n    if (!flipId) {\n      throw new Error('No flipId provided')\n    }\n    const flipConfig = {\n      scale,\n      translate,\n      opacity,\n      transformOrigin,\n      spring,\n      stagger,\n      delayUntil\n    }\n    if (!flipConfig.scale && !flipConfig.translate && !flipConfig.opacity) {\n      assign(flipConfig, {\n        translate: true,\n        scale: true,\n        opacity: true\n      })\n    }\n    if (flipId) {\n      element.dataset.flipId = String(flipId)\n    }\n    element.dataset.flipConfig = JSON.stringify(flipConfig)\n    // finally, add callbacks\n    this.flipCallbacks[flipId] = {\n      shouldFlip,\n      shouldInvert,\n      onAppear,\n      onStart,\n      onSpringUpdate,\n      onComplete,\n      onExit\n    }\n  }\n\n  addInverted({\n    element,\n    parent,\n    opacity,\n    translate,\n    scale,\n    transformOrigin\n  }: {\n    element: HTMLElement\n    parent: HTMLElement\n    opacity: boolean\n    translate: boolean\n    scale: boolean\n    transformOrigin: string\n  }) {\n    if (!element) {\n      throw new Error('no element provided')\n    }\n    if (!parent) {\n      throw new Error('parent must be provided')\n    }\n\n    const inverseFlipId = parent.dataset.flipId\n    const flipConfig = {\n      scale,\n      translate,\n      opacity,\n      transformOrigin\n    }\n    if (!flipConfig.scale && !flipConfig.translate && !flipConfig.opacity) {\n      assign(flipConfig, {\n        translate: true,\n        scale: true,\n        opacity: true\n      })\n    }\n    element.dataset.inverseFlipId = inverseFlipId\n    element.dataset.flipConfig = JSON.stringify(flipConfig)\n  }\n}\n\nexport default Flipper\n","// this is exclusively for users of the library to create their own enter + exit animations\nimport { SpringSystem } from '../forked-rebound'\nimport { SpringSystemInterface } from '../forked-rebound/types.d'\nimport { tweenProp, assign } from '../utilities'\nimport { normalizeSpring, springPresets } from '../springSettings'\nimport { SimpleSpringOptions } from './types'\nimport { SpringConfig } from '../springSettings/types'\n\n// this should get created only 1x\nconst springSystem: SpringSystemInterface = new SpringSystem()\n\n/**\n * A simple spring function for animating DOM properties.\n * Returns a function that will immediately cancel the in-progress animation.\n * */\nconst createSimpleSpring = ({\n  config,\n  values,\n  onUpdate,\n  delay = 0,\n  onComplete\n}: SimpleSpringOptions) => {\n  const { stiffness, damping, overshootClamping } = assign(\n    {},\n    springPresets.noWobble,\n    normalizeSpring(config)\n  ) as SpringConfig\n  const spring = springSystem.createSpring(stiffness!, damping!)\n  spring.setOvershootClampingEnabled(!!overshootClamping)\n  spring.addListener({\n    onSpringAtRest: spring => {\n      if (onComplete) onComplete()\n      spring.destroy()\n    },\n    onSpringUpdate: spring => {\n      const springVal = spring.getCurrentValue()\n      if (!values) return onUpdate(springVal)\n      const currentValues = Object.keys(values)\n        .map(value => [\n          value,\n          tweenProp(values[value][0], values[value][1], springVal)\n        ])\n        .reduce((acc, curr) => {\n          return Object.assign(acc, { [curr[0]]: curr[1] })\n        }, {})\n      onUpdate(currentValues)\n    }\n  })\n  if (delay) {\n    setTimeout(() => {\n      spring.setEndValue(1)\n    }, delay)\n  } else {\n    spring.setEndValue(1)\n  }\n  return spring\n}\n\nexport default createSimpleSpring\n"]},"metadata":{},"sourceType":"module"}