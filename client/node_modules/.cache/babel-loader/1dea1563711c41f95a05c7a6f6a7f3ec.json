{"ast":null,"code":"import { localStorageAvailable } from '../utils/utils'; // A guide to feature toggling.\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nlet experimentalEnabled = false;\nif (typeof process !== 'undefined' && process.env.GRID_EXPERIMENTAL_ENABLED !== undefined && localStorageAvailable() && window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED')) {\n  experimentalEnabled = window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED') === 'true';\n} else if (typeof process !== 'undefined') {\n  experimentalEnabled = process.env.GRID_EXPERIMENTAL_ENABLED === 'true';\n}\nexport const GRID_EXPERIMENTAL_ENABLED = experimentalEnabled;","map":{"version":3,"names":["localStorageAvailable","experimentalEnabled","process","env","GRID_EXPERIMENTAL_ENABLED","undefined","window","localStorage","getItem"],"sources":["/Users/user/node_modules/@mui/x-data-grid/constants/envConstants.js"],"sourcesContent":["import { localStorageAvailable } from '../utils/utils'; // A guide to feature toggling.\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nlet experimentalEnabled = false;\n\nif (typeof process !== 'undefined' && process.env.GRID_EXPERIMENTAL_ENABLED !== undefined && localStorageAvailable() && window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED')) {\n  experimentalEnabled = window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED') === 'true';\n} else if (typeof process !== 'undefined') {\n  experimentalEnabled = process.env.GRID_EXPERIMENTAL_ENABLED === 'true';\n}\n\nexport const GRID_EXPERIMENTAL_ENABLED = experimentalEnabled;"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,gBAAgB,CAAC,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,mBAAmB,GAAG,KAAK;AAE/B,IAAI,OAAOC,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,GAAG,CAACC,yBAAyB,KAAKC,SAAS,IAAIL,qBAAqB,EAAE,IAAIM,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,2BAA2B,CAAC,EAAE;EAChLP,mBAAmB,GAAGK,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,2BAA2B,CAAC,KAAK,MAAM;AAC3F,CAAC,MAAM,IAAI,OAAON,OAAO,KAAK,WAAW,EAAE;EACzCD,mBAAmB,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,KAAK,MAAM;AACxE;AAEA,OAAO,MAAMA,yBAAyB,GAAGH,mBAAmB"},"metadata":{},"sourceType":"module"}