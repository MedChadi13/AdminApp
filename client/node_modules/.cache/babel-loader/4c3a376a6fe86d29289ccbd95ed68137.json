{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = {\n    density: densityValue,\n    classes: rootProps.classes,\n    autoHeight: rootProps.autoHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": totalRowCount + pinnedRowsCount + 1 // +1 for the header row\n    ,\n\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","capitalize","unstable_composeClasses","composeClasses","GridRootStyles","gridVisibleColumnDefinitionsSelector","useGridSelector","useGridApiContext","useGridRootProps","getDataGridUtilityClass","gridPinnedRowsCountSelector","gridRowCountSelector","gridDensityValueSelector","jsx","_jsx","useUtilityClasses","ownerState","autoHeight","density","classes","slots","root","GridRoot","forwardRef","props","ref","rootProps","children","className","other","apiRef","visibleColumns","totalRowCount","densityValue","rootContainerRef","useRef","handleRef","pinnedRowsCount","current","rootElementRef","mountedState","setMountedState","useState","unstable_updateGridDimensionsRef","role","length","disableMultipleSelection","process","env","NODE_ENV","propTypes","sx","oneOfType","arrayOf","func","object","bool"],"sources":["/Users/user/node_modules/@mui/x-data-grid/components/containers/GridRoot.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = {\n    density: densityValue,\n    classes: rootProps.classes,\n    autoHeight: rootProps.autoHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": totalRowCount + pinnedRowsCount + 1 // +1 for the header row\n    ,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };"],"mappings":"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"},"metadata":{},"sourceType":"module"}