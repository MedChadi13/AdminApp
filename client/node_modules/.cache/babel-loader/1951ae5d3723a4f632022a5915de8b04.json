{"ast":null,"code":"var _jsxFileName = \"/Users/user/Downloads/flask-react-session-authenticaton-tutorial-master/client/src/pages/Upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const [files, setFile] = useState();\n  const [array, setArray] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [result, setResult] = useState([]);\n  const fileReader = new FileReader();\n  const formData = new FormData();\n  const handleOnChange = e => {\n    setFile(e.target.files[0]);\n    formData.append(\"file\", e.target.files[0]);\n  };\n  const csvFileToArray = string => {\n    const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n    const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n    const array = csvRows.map(i => {\n      const values = i.split(\",\");\n      const obj = csvHeader.reduce((object, header, index) => {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return obj;\n    });\n    setArray(array);\n  };\n  const headerKeys = Object.keys(Object.assign({}, ...array));\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    if (files) {\n      fileReader.onload = function (event) {\n        const text = event.target.result;\n        csvFileToArray(text);\n      };\n      fileReader.readAsText(files);\n    }\n    const headers = {\n      \"Content-Type\": \"application/csv\"\n    };\n    console.log({\n      \"file\": files\n    });\n    axios.post(\"http://localhost:5000/upload\", {\n      \"file\": files\n    }, {\n      headers: headers\n    }).then(res => console.log(res)).catch(err => console.warn(err));\n  };\n  const send = array => {\n    // axios.post(\"http://localhost:5000/logout\", array).catch(function (error) {\n    //   if (error.response) {\n    //     // Request made and server responded\n    //     console.log(error.response.data);\n    //     console.log(error.response.status);\n    //     console.log(error.response.headers);\n    //   } else if (error.request) {\n    //     // The request was made but no response was received\n    //     console.log(error.request);\n    //   } else {\n    //     // Something happened in setting up the request that triggered an Error\n    //     console.log(\"Error\", error.message);\n    //   }\n    // });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ADMIN DASHBOARD \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"csvFileInput\",\n        accept: \".csv\",\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          handleOnSubmit(e);\n        },\n        children: \"IMPORT CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerKeys.map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, \"header\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: array.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(item).map(val => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this))\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"A7GNVpSC3RNCwE0T51clxm9BnUc=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","Upload","files","setFile","array","setArray","index","setIndex","result","setResult","fileReader","FileReader","formData","FormData","handleOnChange","e","target","append","csvFileToArray","string","csvHeader","slice","indexOf","split","csvRows","map","i","values","obj","reduce","object","header","headerKeys","Object","keys","assign","handleOnSubmit","preventDefault","onload","event","text","readAsText","headers","console","log","post","then","res","catch","err","warn","send","textAlign","key","item","val","id"],"sources":["/Users/user/Downloads/flask-react-session-authenticaton-tutorial-master/client/src/pages/Upload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Upload = () => {\n  const [files, setFile] = useState();\n  const [array, setArray] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [result, setResult] = useState([]);\n\n  const fileReader = new FileReader();\n  const formData = new FormData();\n\n  const handleOnChange = (e) => {\n    setFile(e.target.files[0]);\n    formData.append(\"file\", e.target.files[0]);\n  };\n\n  const csvFileToArray = (string) => {\n    const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n    const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n\n    const array = csvRows.map((i) => {\n      const values = i.split(\",\");\n      const obj = csvHeader.reduce((object, header, index) => {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return obj;\n    });\n\n    setArray(array);\n  };\n  const headerKeys = Object.keys(Object.assign({}, ...array));\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (files) {\n      fileReader.onload = function (event) {\n        const text = event.target.result;\n        csvFileToArray(text);\n      };\n      fileReader.readAsText(files);\n    }\n    const headers = {\n      \"Content-Type\": \"application/csv\",\n    };\n    console.log({ \"file\": files });\n    axios\n      .post(\n        \"http://localhost:5000/upload\",\n        { \"file\": files },\n        {\n          headers: headers,\n        }\n      )\n      .then((res) => console.log(res))\n      .catch((err) => console.warn(err));\n  };\n\n  const send = (array) => {\n    // axios.post(\"http://localhost:5000/logout\", array).catch(function (error) {\n    //   if (error.response) {\n    //     // Request made and server responded\n    //     console.log(error.response.data);\n    //     console.log(error.response.status);\n    //     console.log(error.response.headers);\n    //   } else if (error.request) {\n    //     // The request was made but no response was received\n    //     console.log(error.request);\n    //   } else {\n    //     // Something happened in setting up the request that triggered an Error\n    //     console.log(\"Error\", error.message);\n    //   }\n    // });\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>ADMIN DASHBOARD </h1>\n      <form>\n        <input\n          type={\"file\"}\n          id={\"csvFileInput\"}\n          accept={\".csv\"}\n          onChange={handleOnChange}\n        />\n\n        <button\n          onClick={(e) => {\n            handleOnSubmit(e);\n          }}\n        >\n          IMPORT CSV\n        </button>\n      </form>\n\n      <br />\n\n      <table>\n        <thead>\n          <tr key={\"header\"}>\n            {headerKeys.map((key) => (\n              <th>{key}</th>\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {array.map((item) => (\n            <tr key={item.id}>\n              {/* {send(item)} */}\n              {Object.values(item).map((val) => (\n                <td>{val}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Upload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,EAAE;EACnC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,UAAU,GAAG,IAAIC,UAAU,EAAE;EACnC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAE/B,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC5BZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACd,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1BU,QAAQ,CAACK,MAAM,CAAC,MAAM,EAAEF,CAAC,CAACC,MAAM,CAACd,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMgB,cAAc,GAAIC,MAAM,IAAK;IACjC,MAAMC,SAAS,GAAGD,MAAM,CAACE,KAAK,CAAC,CAAC,EAAEF,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAClE,MAAMC,OAAO,GAAGL,MAAM,CAACE,KAAK,CAACF,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;IAElE,MAAMnB,KAAK,GAAGoB,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAK;MAC/B,MAAMC,MAAM,GAAGD,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC;MAC3B,MAAMK,GAAG,GAAGR,SAAS,CAACS,MAAM,CAAC,CAACC,MAAM,EAAEC,MAAM,EAAEzB,KAAK,KAAK;QACtDwB,MAAM,CAACC,MAAM,CAAC,GAAGJ,MAAM,CAACrB,KAAK,CAAC;QAC9B,OAAOwB,MAAM;MACf,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,OAAOF,GAAG;IACZ,CAAC,CAAC;IAEFvB,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EACD,MAAM4B,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACD,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG/B,KAAK,CAAC,CAAC;EAE3D,MAAMgC,cAAc,GAAIrB,CAAC,IAAK;IAC5BA,CAAC,CAACsB,cAAc,EAAE;IAElB,IAAInC,KAAK,EAAE;MACTQ,UAAU,CAAC4B,MAAM,GAAG,UAAUC,KAAK,EAAE;QACnC,MAAMC,IAAI,GAAGD,KAAK,CAACvB,MAAM,CAACR,MAAM;QAChCU,cAAc,CAACsB,IAAI,CAAC;MACtB,CAAC;MACD9B,UAAU,CAAC+B,UAAU,CAACvC,KAAK,CAAC;IAC9B;IACA,MAAMwC,OAAO,GAAG;MACd,cAAc,EAAE;IAClB,CAAC;IACDC,OAAO,CAACC,GAAG,CAAC;MAAE,MAAM,EAAE1C;IAAM,CAAC,CAAC;IAC9BF,KAAK,CACF6C,IAAI,CACH,8BAA8B,EAC9B;MAAE,MAAM,EAAE3C;IAAM,CAAC,EACjB;MACEwC,OAAO,EAAEA;IACX,CAAC,CACF,CACAI,IAAI,CAAEC,GAAG,IAAKJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC,CAC/BC,KAAK,CAAEC,GAAG,IAAKN,OAAO,CAACO,IAAI,CAACD,GAAG,CAAC,CAAC;EACtC,CAAC;EAED,MAAME,IAAI,GAAI/C,KAAK,IAAK;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EAED,oBACE;IAAK,KAAK,EAAE;MAAEgD,SAAS,EAAE;IAAS,CAAE;IAAA,wBAClC;MAAA,UAAI;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAK,eACzB;MAAA,wBACE;QACE,IAAI,EAAE,MAAO;QACb,EAAE,EAAE,cAAe;QACnB,MAAM,EAAE,MAAO;QACf,QAAQ,EAAEtC;MAAe;QAAA;QAAA;QAAA;MAAA,QACzB,eAEF;QACE,OAAO,EAAGC,CAAC,IAAK;UACdqB,cAAc,CAACrB,CAAC,CAAC;QACnB,CAAE;QAAA,UACH;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eAEP;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MAAA,wBACE;QAAA,uBACE;UAAA,UACGiB,UAAU,CAACP,GAAG,CAAE4B,GAAG,iBAClB;YAAA,UAAKA;UAAG;YAAA;YAAA;YAAA;UAAA,QACT;QAAC,GAHK,QAAQ;UAAA;UAAA;UAAA;QAAA;MAIZ;QAAA;QAAA;QAAA;MAAA,QACC,eAER;QAAA,UACGjD,KAAK,CAACqB,GAAG,CAAE6B,IAAI,iBACd;UAAA,UAEGrB,MAAM,CAACN,MAAM,CAAC2B,IAAI,CAAC,CAAC7B,GAAG,CAAE8B,GAAG,iBAC3B;YAAA,UAAKA;UAAG;YAAA;YAAA;YAAA;UAAA,QACT;QAAC,GAJKD,IAAI,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAMjB;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAtHIvD,MAAM;AAAA,KAANA,MAAM;AAwHZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}