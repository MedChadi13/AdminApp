{"ast":null,"code":"import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","map":{"version":3,"names":["useGridInitialization","useGridInitializeState","useGridClipboard","columnMenuStateInitializer","useGridColumnMenu","useGridColumns","columnsStateInitializer","densityStateInitializer","useGridDensity","useGridCsvExport","useGridPrintExport","useGridFilter","filterStateInitializer","focusStateInitializer","useGridFocus","useGridKeyboardNavigation","useGridPagination","paginationStateInitializer","useGridPreferencesPanel","preferencePanelStateInitializer","useGridEditing","useGridEditing_old","editingStateInitializer","editingStateInitializer_old","useGridEditing_new","editingStateInitializer_new","useGridRows","rowsStateInitializer","useGridRowsPreProcessors","useGridParamsApi","selectionStateInitializer","useGridSelection","useGridSelectionPreProcessors","useGridSorting","sortingStateInitializer","useGridScroll","useGridEvents","useGridDimensions","rowsMetaStateInitializer","useGridRowsMeta","useGridStatePersistence","useGridColumnSpanning","useDataGridComponent","props","_props$experimentalFe","_props$experimentalFe2","apiRef","undefined","experimentalFeatures","newEditingApi"],"sources":["/Users/user/node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js"],"sourcesContent":["import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}