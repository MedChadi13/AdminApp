{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","map":{"version":3,"names":["React","PropTypes","useGridApiContext","GridMainContainer","GridAutoSizer","GridOverlays","useGridRootProps","useGridSelector","gridDensityHeaderHeightSelector","jsx","_jsx","jsxs","_jsxs","GridBody","props","children","VirtualScrollerComponent","ColumnHeadersComponent","apiRef","rootProps","headerHeight","isVirtualizationDisabled","setIsVirtualizationDisabled","useState","disableVirtualization","useCallback","enableVirtualization","current","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","useRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","handleResize","size","publishEvent","ref","innerRef","nonce","disableHeight","autoHeight","onResize","style","width","height","marginTop","process","env","NODE_ENV","propTypes","node","elementType","isRequired"],"sources":["/Users/user/node_modules/@mui/x-data-grid/components/base/GridBody.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };"],"mappings":"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"},"metadata":{},"sourceType":"module"}